// Code generated by go-swagger; DO NOT EDIT.

package stick_request_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// ReplaceStickRequestRuleOKCode is the HTTP code returned for type ReplaceStickRequestRuleOK
const ReplaceStickRequestRuleOKCode int = 200

/*ReplaceStickRequestRuleOK Stick Request Rule replaced

swagger:response replaceStickRequestRuleOK
*/
type ReplaceStickRequestRuleOK struct {

	/*
	  In: Body
	*/
	Payload *models.StickRequestRule `json:"body,omitempty"`
}

// NewReplaceStickRequestRuleOK creates ReplaceStickRequestRuleOK with default headers values
func NewReplaceStickRequestRuleOK() *ReplaceStickRequestRuleOK {

	return &ReplaceStickRequestRuleOK{}
}

// WithPayload adds the payload to the replace stick request rule o k response
func (o *ReplaceStickRequestRuleOK) WithPayload(payload *models.StickRequestRule) *ReplaceStickRequestRuleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace stick request rule o k response
func (o *ReplaceStickRequestRuleOK) SetPayload(payload *models.StickRequestRule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceStickRequestRuleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceStickRequestRuleBadRequestCode is the HTTP code returned for type ReplaceStickRequestRuleBadRequest
const ReplaceStickRequestRuleBadRequestCode int = 400

/*ReplaceStickRequestRuleBadRequest Bad request

swagger:response replaceStickRequestRuleBadRequest
*/
type ReplaceStickRequestRuleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceStickRequestRuleBadRequest creates ReplaceStickRequestRuleBadRequest with default headers values
func NewReplaceStickRequestRuleBadRequest() *ReplaceStickRequestRuleBadRequest {

	return &ReplaceStickRequestRuleBadRequest{}
}

// WithPayload adds the payload to the replace stick request rule bad request response
func (o *ReplaceStickRequestRuleBadRequest) WithPayload(payload *models.Error) *ReplaceStickRequestRuleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace stick request rule bad request response
func (o *ReplaceStickRequestRuleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceStickRequestRuleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceStickRequestRuleNotFoundCode is the HTTP code returned for type ReplaceStickRequestRuleNotFound
const ReplaceStickRequestRuleNotFoundCode int = 404

/*ReplaceStickRequestRuleNotFound The specified resource was not found

swagger:response replaceStickRequestRuleNotFound
*/
type ReplaceStickRequestRuleNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceStickRequestRuleNotFound creates ReplaceStickRequestRuleNotFound with default headers values
func NewReplaceStickRequestRuleNotFound() *ReplaceStickRequestRuleNotFound {

	return &ReplaceStickRequestRuleNotFound{}
}

// WithPayload adds the payload to the replace stick request rule not found response
func (o *ReplaceStickRequestRuleNotFound) WithPayload(payload *models.Error) *ReplaceStickRequestRuleNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace stick request rule not found response
func (o *ReplaceStickRequestRuleNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceStickRequestRuleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ReplaceStickRequestRuleDefault General Error

swagger:response replaceStickRequestRuleDefault
*/
type ReplaceStickRequestRuleDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceStickRequestRuleDefault creates ReplaceStickRequestRuleDefault with default headers values
func NewReplaceStickRequestRuleDefault(code int) *ReplaceStickRequestRuleDefault {
	if code <= 0 {
		code = 500
	}

	return &ReplaceStickRequestRuleDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the replace stick request rule default response
func (o *ReplaceStickRequestRuleDefault) WithStatusCode(code int) *ReplaceStickRequestRuleDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the replace stick request rule default response
func (o *ReplaceStickRequestRuleDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the replace stick request rule default response
func (o *ReplaceStickRequestRuleDefault) WithPayload(payload *models.Error) *ReplaceStickRequestRuleDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace stick request rule default response
func (o *ReplaceStickRequestRuleDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceStickRequestRuleDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
