// Code generated by go-swagger; DO NOT EDIT.

package stick_request_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// GetStickRequestRulesOKCode is the HTTP code returned for type GetStickRequestRulesOK
const GetStickRequestRulesOKCode int = 200

/*GetStickRequestRulesOK Successful operation

swagger:response getStickRequestRulesOK
*/
type GetStickRequestRulesOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetStickRequestRulesOKBody `json:"body,omitempty"`
}

// NewGetStickRequestRulesOK creates GetStickRequestRulesOK with default headers values
func NewGetStickRequestRulesOK() *GetStickRequestRulesOK {

	return &GetStickRequestRulesOK{}
}

// WithPayload adds the payload to the get stick request rules o k response
func (o *GetStickRequestRulesOK) WithPayload(payload *models.GetStickRequestRulesOKBody) *GetStickRequestRulesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get stick request rules o k response
func (o *GetStickRequestRulesOK) SetPayload(payload *models.GetStickRequestRulesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStickRequestRulesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetStickRequestRulesDefault General Error

swagger:response getStickRequestRulesDefault
*/
type GetStickRequestRulesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetStickRequestRulesDefault creates GetStickRequestRulesDefault with default headers values
func NewGetStickRequestRulesDefault(code int) *GetStickRequestRulesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetStickRequestRulesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get stick request rules default response
func (o *GetStickRequestRulesDefault) WithStatusCode(code int) *GetStickRequestRulesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get stick request rules default response
func (o *GetStickRequestRulesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get stick request rules default response
func (o *GetStickRequestRulesDefault) WithPayload(payload *models.Error) *GetStickRequestRulesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get stick request rules default response
func (o *GetStickRequestRulesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStickRequestRulesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
