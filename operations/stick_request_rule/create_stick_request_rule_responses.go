// Code generated by go-swagger; DO NOT EDIT.

package stick_request_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// CreateStickRequestRuleCreatedCode is the HTTP code returned for type CreateStickRequestRuleCreated
const CreateStickRequestRuleCreatedCode int = 201

/*CreateStickRequestRuleCreated Stick Request Rule created

swagger:response createStickRequestRuleCreated
*/
type CreateStickRequestRuleCreated struct {

	/*
	  In: Body
	*/
	Payload *models.StickRequestRule `json:"body,omitempty"`
}

// NewCreateStickRequestRuleCreated creates CreateStickRequestRuleCreated with default headers values
func NewCreateStickRequestRuleCreated() *CreateStickRequestRuleCreated {

	return &CreateStickRequestRuleCreated{}
}

// WithPayload adds the payload to the create stick request rule created response
func (o *CreateStickRequestRuleCreated) WithPayload(payload *models.StickRequestRule) *CreateStickRequestRuleCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stick request rule created response
func (o *CreateStickRequestRuleCreated) SetPayload(payload *models.StickRequestRule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStickRequestRuleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateStickRequestRuleBadRequestCode is the HTTP code returned for type CreateStickRequestRuleBadRequest
const CreateStickRequestRuleBadRequestCode int = 400

/*CreateStickRequestRuleBadRequest Bad request

swagger:response createStickRequestRuleBadRequest
*/
type CreateStickRequestRuleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateStickRequestRuleBadRequest creates CreateStickRequestRuleBadRequest with default headers values
func NewCreateStickRequestRuleBadRequest() *CreateStickRequestRuleBadRequest {

	return &CreateStickRequestRuleBadRequest{}
}

// WithPayload adds the payload to the create stick request rule bad request response
func (o *CreateStickRequestRuleBadRequest) WithPayload(payload *models.Error) *CreateStickRequestRuleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stick request rule bad request response
func (o *CreateStickRequestRuleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStickRequestRuleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateStickRequestRuleConflictCode is the HTTP code returned for type CreateStickRequestRuleConflict
const CreateStickRequestRuleConflictCode int = 409

/*CreateStickRequestRuleConflict The specified resource already exists

swagger:response createStickRequestRuleConflict
*/
type CreateStickRequestRuleConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateStickRequestRuleConflict creates CreateStickRequestRuleConflict with default headers values
func NewCreateStickRequestRuleConflict() *CreateStickRequestRuleConflict {

	return &CreateStickRequestRuleConflict{}
}

// WithPayload adds the payload to the create stick request rule conflict response
func (o *CreateStickRequestRuleConflict) WithPayload(payload *models.Error) *CreateStickRequestRuleConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stick request rule conflict response
func (o *CreateStickRequestRuleConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStickRequestRuleConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateStickRequestRuleDefault General Error

swagger:response createStickRequestRuleDefault
*/
type CreateStickRequestRuleDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateStickRequestRuleDefault creates CreateStickRequestRuleDefault with default headers values
func NewCreateStickRequestRuleDefault(code int) *CreateStickRequestRuleDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateStickRequestRuleDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create stick request rule default response
func (o *CreateStickRequestRuleDefault) WithStatusCode(code int) *CreateStickRequestRuleDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create stick request rule default response
func (o *CreateStickRequestRuleDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create stick request rule default response
func (o *CreateStickRequestRuleDefault) WithPayload(payload *models.Error) *CreateStickRequestRuleDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stick request rule default response
func (o *CreateStickRequestRuleDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStickRequestRuleDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
