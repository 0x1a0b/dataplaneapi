// Code generated by go-swagger; DO NOT EDIT.

package log_target

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// GetLogTargetOKCode is the HTTP code returned for type GetLogTargetOK
const GetLogTargetOKCode int = 200

/*GetLogTargetOK Successful operation

swagger:response getLogTargetOK
*/
type GetLogTargetOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetLogTargetOKBody `json:"body,omitempty"`
}

// NewGetLogTargetOK creates GetLogTargetOK with default headers values
func NewGetLogTargetOK() *GetLogTargetOK {

	return &GetLogTargetOK{}
}

// WithPayload adds the payload to the get log target o k response
func (o *GetLogTargetOK) WithPayload(payload *models.GetLogTargetOKBody) *GetLogTargetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get log target o k response
func (o *GetLogTargetOK) SetPayload(payload *models.GetLogTargetOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLogTargetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetLogTargetNotFoundCode is the HTTP code returned for type GetLogTargetNotFound
const GetLogTargetNotFoundCode int = 404

/*GetLogTargetNotFound The specified resource was not found

swagger:response getLogTargetNotFound
*/
type GetLogTargetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetLogTargetNotFound creates GetLogTargetNotFound with default headers values
func NewGetLogTargetNotFound() *GetLogTargetNotFound {

	return &GetLogTargetNotFound{}
}

// WithPayload adds the payload to the get log target not found response
func (o *GetLogTargetNotFound) WithPayload(payload *models.Error) *GetLogTargetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get log target not found response
func (o *GetLogTargetNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLogTargetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetLogTargetDefault General Error

swagger:response getLogTargetDefault
*/
type GetLogTargetDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetLogTargetDefault creates GetLogTargetDefault with default headers values
func NewGetLogTargetDefault(code int) *GetLogTargetDefault {
	if code <= 0 {
		code = 500
	}

	return &GetLogTargetDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get log target default response
func (o *GetLogTargetDefault) WithStatusCode(code int) *GetLogTargetDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get log target default response
func (o *GetLogTargetDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get log target default response
func (o *GetLogTargetDefault) WithPayload(payload *models.Error) *GetLogTargetDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get log target default response
func (o *GetLogTargetDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLogTargetDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
