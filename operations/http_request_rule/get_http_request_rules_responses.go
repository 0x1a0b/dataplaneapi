// Code generated by go-swagger; DO NOT EDIT.

package http_request_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// GetHTTPRequestRulesOKCode is the HTTP code returned for type GetHTTPRequestRulesOK
const GetHTTPRequestRulesOKCode int = 200

/*GetHTTPRequestRulesOK Successful operation

swagger:response getHttpRequestRulesOK
*/
type GetHTTPRequestRulesOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetHTTPRequestRulesOKBody `json:"body,omitempty"`
}

// NewGetHTTPRequestRulesOK creates GetHTTPRequestRulesOK with default headers values
func NewGetHTTPRequestRulesOK() *GetHTTPRequestRulesOK {

	return &GetHTTPRequestRulesOK{}
}

// WithPayload adds the payload to the get Http request rules o k response
func (o *GetHTTPRequestRulesOK) WithPayload(payload *models.GetHTTPRequestRulesOKBody) *GetHTTPRequestRulesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Http request rules o k response
func (o *GetHTTPRequestRulesOK) SetPayload(payload *models.GetHTTPRequestRulesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHTTPRequestRulesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetHTTPRequestRulesDefault General Error

swagger:response getHttpRequestRulesDefault
*/
type GetHTTPRequestRulesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetHTTPRequestRulesDefault creates GetHTTPRequestRulesDefault with default headers values
func NewGetHTTPRequestRulesDefault(code int) *GetHTTPRequestRulesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetHTTPRequestRulesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get HTTP request rules default response
func (o *GetHTTPRequestRulesDefault) WithStatusCode(code int) *GetHTTPRequestRulesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get HTTP request rules default response
func (o *GetHTTPRequestRulesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get HTTP request rules default response
func (o *GetHTTPRequestRulesDefault) WithPayload(payload *models.Error) *GetHTTPRequestRulesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get HTTP request rules default response
func (o *GetHTTPRequestRulesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHTTPRequestRulesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
