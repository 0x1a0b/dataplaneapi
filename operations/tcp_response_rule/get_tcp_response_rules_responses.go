// Code generated by go-swagger; DO NOT EDIT.

package tcp_response_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// GetTCPResponseRulesOKCode is the HTTP code returned for type GetTCPResponseRulesOK
const GetTCPResponseRulesOKCode int = 200

/*GetTCPResponseRulesOK Successful operation

swagger:response getTcpResponseRulesOK
*/
type GetTCPResponseRulesOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetTCPResponseRulesOKBody `json:"body,omitempty"`
}

// NewGetTCPResponseRulesOK creates GetTCPResponseRulesOK with default headers values
func NewGetTCPResponseRulesOK() *GetTCPResponseRulesOK {

	return &GetTCPResponseRulesOK{}
}

// WithPayload adds the payload to the get Tcp response rules o k response
func (o *GetTCPResponseRulesOK) WithPayload(payload *models.GetTCPResponseRulesOKBody) *GetTCPResponseRulesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Tcp response rules o k response
func (o *GetTCPResponseRulesOK) SetPayload(payload *models.GetTCPResponseRulesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTCPResponseRulesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetTCPResponseRulesDefault General Error

swagger:response getTcpResponseRulesDefault
*/
type GetTCPResponseRulesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTCPResponseRulesDefault creates GetTCPResponseRulesDefault with default headers values
func NewGetTCPResponseRulesDefault(code int) *GetTCPResponseRulesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTCPResponseRulesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get TCP response rules default response
func (o *GetTCPResponseRulesDefault) WithStatusCode(code int) *GetTCPResponseRulesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get TCP response rules default response
func (o *GetTCPResponseRulesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get TCP response rules default response
func (o *GetTCPResponseRulesDefault) WithPayload(payload *models.Error) *GetTCPResponseRulesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get TCP response rules default response
func (o *GetTCPResponseRulesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTCPResponseRulesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
