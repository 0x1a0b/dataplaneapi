// Code generated by go-swagger; DO NOT EDIT.

package backend

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// GetBackendsOKCode is the HTTP code returned for type GetBackendsOK
const GetBackendsOKCode int = 200

/*GetBackendsOK Successful operation

swagger:response getBackendsOK
*/
type GetBackendsOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetBackendsOKBody `json:"body,omitempty"`
}

// NewGetBackendsOK creates GetBackendsOK with default headers values
func NewGetBackendsOK() *GetBackendsOK {

	return &GetBackendsOK{}
}

// WithPayload adds the payload to the get backends o k response
func (o *GetBackendsOK) WithPayload(payload *models.GetBackendsOKBody) *GetBackendsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get backends o k response
func (o *GetBackendsOK) SetPayload(payload *models.GetBackendsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBackendsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetBackendsDefault General Error

swagger:response getBackendsDefault
*/
type GetBackendsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBackendsDefault creates GetBackendsDefault with default headers values
func NewGetBackendsDefault(code int) *GetBackendsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetBackendsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get backends default response
func (o *GetBackendsDefault) WithStatusCode(code int) *GetBackendsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get backends default response
func (o *GetBackendsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get backends default response
func (o *GetBackendsDefault) WithPayload(payload *models.Error) *GetBackendsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get backends default response
func (o *GetBackendsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBackendsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
