// Code generated by go-swagger; DO NOT EDIT.

package stick_response_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// ReplaceStickResponseRuleOKCode is the HTTP code returned for type ReplaceStickResponseRuleOK
const ReplaceStickResponseRuleOKCode int = 200

/*ReplaceStickResponseRuleOK Stick Response Rule replaced

swagger:response replaceStickResponseRuleOK
*/
type ReplaceStickResponseRuleOK struct {

	/*
	  In: Body
	*/
	Payload *models.StickResponseRule `json:"body,omitempty"`
}

// NewReplaceStickResponseRuleOK creates ReplaceStickResponseRuleOK with default headers values
func NewReplaceStickResponseRuleOK() *ReplaceStickResponseRuleOK {

	return &ReplaceStickResponseRuleOK{}
}

// WithPayload adds the payload to the replace stick response rule o k response
func (o *ReplaceStickResponseRuleOK) WithPayload(payload *models.StickResponseRule) *ReplaceStickResponseRuleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace stick response rule o k response
func (o *ReplaceStickResponseRuleOK) SetPayload(payload *models.StickResponseRule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceStickResponseRuleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceStickResponseRuleBadRequestCode is the HTTP code returned for type ReplaceStickResponseRuleBadRequest
const ReplaceStickResponseRuleBadRequestCode int = 400

/*ReplaceStickResponseRuleBadRequest Bad request

swagger:response replaceStickResponseRuleBadRequest
*/
type ReplaceStickResponseRuleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceStickResponseRuleBadRequest creates ReplaceStickResponseRuleBadRequest with default headers values
func NewReplaceStickResponseRuleBadRequest() *ReplaceStickResponseRuleBadRequest {

	return &ReplaceStickResponseRuleBadRequest{}
}

// WithPayload adds the payload to the replace stick response rule bad request response
func (o *ReplaceStickResponseRuleBadRequest) WithPayload(payload *models.Error) *ReplaceStickResponseRuleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace stick response rule bad request response
func (o *ReplaceStickResponseRuleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceStickResponseRuleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceStickResponseRuleNotFoundCode is the HTTP code returned for type ReplaceStickResponseRuleNotFound
const ReplaceStickResponseRuleNotFoundCode int = 404

/*ReplaceStickResponseRuleNotFound The specified resource was not found

swagger:response replaceStickResponseRuleNotFound
*/
type ReplaceStickResponseRuleNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceStickResponseRuleNotFound creates ReplaceStickResponseRuleNotFound with default headers values
func NewReplaceStickResponseRuleNotFound() *ReplaceStickResponseRuleNotFound {

	return &ReplaceStickResponseRuleNotFound{}
}

// WithPayload adds the payload to the replace stick response rule not found response
func (o *ReplaceStickResponseRuleNotFound) WithPayload(payload *models.Error) *ReplaceStickResponseRuleNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace stick response rule not found response
func (o *ReplaceStickResponseRuleNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceStickResponseRuleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ReplaceStickResponseRuleDefault General Error

swagger:response replaceStickResponseRuleDefault
*/
type ReplaceStickResponseRuleDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceStickResponseRuleDefault creates ReplaceStickResponseRuleDefault with default headers values
func NewReplaceStickResponseRuleDefault(code int) *ReplaceStickResponseRuleDefault {
	if code <= 0 {
		code = 500
	}

	return &ReplaceStickResponseRuleDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the replace stick response rule default response
func (o *ReplaceStickResponseRuleDefault) WithStatusCode(code int) *ReplaceStickResponseRuleDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the replace stick response rule default response
func (o *ReplaceStickResponseRuleDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the replace stick response rule default response
func (o *ReplaceStickResponseRuleDefault) WithPayload(payload *models.Error) *ReplaceStickResponseRuleDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace stick response rule default response
func (o *ReplaceStickResponseRuleDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceStickResponseRuleDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
