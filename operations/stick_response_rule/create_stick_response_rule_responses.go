// Code generated by go-swagger; DO NOT EDIT.

package stick_response_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// CreateStickResponseRuleCreatedCode is the HTTP code returned for type CreateStickResponseRuleCreated
const CreateStickResponseRuleCreatedCode int = 201

/*CreateStickResponseRuleCreated Stick Response Rule created

swagger:response createStickResponseRuleCreated
*/
type CreateStickResponseRuleCreated struct {

	/*
	  In: Body
	*/
	Payload *models.StickResponseRule `json:"body,omitempty"`
}

// NewCreateStickResponseRuleCreated creates CreateStickResponseRuleCreated with default headers values
func NewCreateStickResponseRuleCreated() *CreateStickResponseRuleCreated {

	return &CreateStickResponseRuleCreated{}
}

// WithPayload adds the payload to the create stick response rule created response
func (o *CreateStickResponseRuleCreated) WithPayload(payload *models.StickResponseRule) *CreateStickResponseRuleCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stick response rule created response
func (o *CreateStickResponseRuleCreated) SetPayload(payload *models.StickResponseRule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStickResponseRuleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateStickResponseRuleBadRequestCode is the HTTP code returned for type CreateStickResponseRuleBadRequest
const CreateStickResponseRuleBadRequestCode int = 400

/*CreateStickResponseRuleBadRequest Bad request

swagger:response createStickResponseRuleBadRequest
*/
type CreateStickResponseRuleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateStickResponseRuleBadRequest creates CreateStickResponseRuleBadRequest with default headers values
func NewCreateStickResponseRuleBadRequest() *CreateStickResponseRuleBadRequest {

	return &CreateStickResponseRuleBadRequest{}
}

// WithPayload adds the payload to the create stick response rule bad request response
func (o *CreateStickResponseRuleBadRequest) WithPayload(payload *models.Error) *CreateStickResponseRuleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stick response rule bad request response
func (o *CreateStickResponseRuleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStickResponseRuleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateStickResponseRuleConflictCode is the HTTP code returned for type CreateStickResponseRuleConflict
const CreateStickResponseRuleConflictCode int = 409

/*CreateStickResponseRuleConflict The specified resource already exists

swagger:response createStickResponseRuleConflict
*/
type CreateStickResponseRuleConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateStickResponseRuleConflict creates CreateStickResponseRuleConflict with default headers values
func NewCreateStickResponseRuleConflict() *CreateStickResponseRuleConflict {

	return &CreateStickResponseRuleConflict{}
}

// WithPayload adds the payload to the create stick response rule conflict response
func (o *CreateStickResponseRuleConflict) WithPayload(payload *models.Error) *CreateStickResponseRuleConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stick response rule conflict response
func (o *CreateStickResponseRuleConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStickResponseRuleConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateStickResponseRuleDefault General Error

swagger:response createStickResponseRuleDefault
*/
type CreateStickResponseRuleDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateStickResponseRuleDefault creates CreateStickResponseRuleDefault with default headers values
func NewCreateStickResponseRuleDefault(code int) *CreateStickResponseRuleDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateStickResponseRuleDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create stick response rule default response
func (o *CreateStickResponseRuleDefault) WithStatusCode(code int) *CreateStickResponseRuleDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create stick response rule default response
func (o *CreateStickResponseRuleDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create stick response rule default response
func (o *CreateStickResponseRuleDefault) WithPayload(payload *models.Error) *CreateStickResponseRuleDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stick response rule default response
func (o *CreateStickResponseRuleDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStickResponseRuleDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
