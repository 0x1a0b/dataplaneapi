// Code generated by go-swagger; DO NOT EDIT.

package tcp_content_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// DeleteTCPContentRuleNoContentCode is the HTTP code returned for type DeleteTCPContentRuleNoContent
const DeleteTCPContentRuleNoContentCode int = 204

/*DeleteTCPContentRuleNoContent TCP Content Rule deleted

swagger:response deleteTcpContentRuleNoContent
*/
type DeleteTCPContentRuleNoContent struct {
}

// NewDeleteTCPContentRuleNoContent creates DeleteTCPContentRuleNoContent with default headers values
func NewDeleteTCPContentRuleNoContent() *DeleteTCPContentRuleNoContent {

	return &DeleteTCPContentRuleNoContent{}
}

// WriteResponse to the client
func (o *DeleteTCPContentRuleNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteTCPContentRuleNotFoundCode is the HTTP code returned for type DeleteTCPContentRuleNotFound
const DeleteTCPContentRuleNotFoundCode int = 404

/*DeleteTCPContentRuleNotFound The specified resource was not found

swagger:response deleteTcpContentRuleNotFound
*/
type DeleteTCPContentRuleNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteTCPContentRuleNotFound creates DeleteTCPContentRuleNotFound with default headers values
func NewDeleteTCPContentRuleNotFound() *DeleteTCPContentRuleNotFound {

	return &DeleteTCPContentRuleNotFound{}
}

// WithPayload adds the payload to the delete Tcp content rule not found response
func (o *DeleteTCPContentRuleNotFound) WithPayload(payload *models.Error) *DeleteTCPContentRuleNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete Tcp content rule not found response
func (o *DeleteTCPContentRuleNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTCPContentRuleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteTCPContentRuleDefault General Error

swagger:response deleteTcpContentRuleDefault
*/
type DeleteTCPContentRuleDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteTCPContentRuleDefault creates DeleteTCPContentRuleDefault with default headers values
func NewDeleteTCPContentRuleDefault(code int) *DeleteTCPContentRuleDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteTCPContentRuleDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete TCP content rule default response
func (o *DeleteTCPContentRuleDefault) WithStatusCode(code int) *DeleteTCPContentRuleDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete TCP content rule default response
func (o *DeleteTCPContentRuleDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete TCP content rule default response
func (o *DeleteTCPContentRuleDefault) WithPayload(payload *models.Error) *DeleteTCPContentRuleDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete TCP content rule default response
func (o *DeleteTCPContentRuleDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTCPContentRuleDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
