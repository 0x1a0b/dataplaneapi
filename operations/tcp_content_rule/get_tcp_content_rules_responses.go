// Code generated by go-swagger; DO NOT EDIT.

package tcp_content_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// GetTCPContentRulesOKCode is the HTTP code returned for type GetTCPContentRulesOK
const GetTCPContentRulesOKCode int = 200

/*GetTCPContentRulesOK Successful operation

swagger:response getTcpContentRulesOK
*/
type GetTCPContentRulesOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetTCPContentRulesOKBody `json:"body,omitempty"`
}

// NewGetTCPContentRulesOK creates GetTCPContentRulesOK with default headers values
func NewGetTCPContentRulesOK() *GetTCPContentRulesOK {

	return &GetTCPContentRulesOK{}
}

// WithPayload adds the payload to the get Tcp content rules o k response
func (o *GetTCPContentRulesOK) WithPayload(payload *models.GetTCPContentRulesOKBody) *GetTCPContentRulesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Tcp content rules o k response
func (o *GetTCPContentRulesOK) SetPayload(payload *models.GetTCPContentRulesOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTCPContentRulesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetTCPContentRulesDefault General Error

swagger:response getTcpContentRulesDefault
*/
type GetTCPContentRulesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTCPContentRulesDefault creates GetTCPContentRulesDefault with default headers values
func NewGetTCPContentRulesDefault(code int) *GetTCPContentRulesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTCPContentRulesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get TCP content rules default response
func (o *GetTCPContentRulesDefault) WithStatusCode(code int) *GetTCPContentRulesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get TCP content rules default response
func (o *GetTCPContentRulesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get TCP content rules default response
func (o *GetTCPContentRulesDefault) WithPayload(payload *models.Error) *GetTCPContentRulesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get TCP content rules default response
func (o *GetTCPContentRulesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTCPContentRulesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
