// Code generated by go-swagger; DO NOT EDIT.

package tcp_content_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// CreateTCPContentRuleCreatedCode is the HTTP code returned for type CreateTCPContentRuleCreated
const CreateTCPContentRuleCreatedCode int = 201

/*CreateTCPContentRuleCreated TCP Content Rule created

swagger:response createTcpContentRuleCreated
*/
type CreateTCPContentRuleCreated struct {

	/*
	  In: Body
	*/
	Payload *models.TCPRule `json:"body,omitempty"`
}

// NewCreateTCPContentRuleCreated creates CreateTCPContentRuleCreated with default headers values
func NewCreateTCPContentRuleCreated() *CreateTCPContentRuleCreated {

	return &CreateTCPContentRuleCreated{}
}

// WithPayload adds the payload to the create Tcp content rule created response
func (o *CreateTCPContentRuleCreated) WithPayload(payload *models.TCPRule) *CreateTCPContentRuleCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Tcp content rule created response
func (o *CreateTCPContentRuleCreated) SetPayload(payload *models.TCPRule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTCPContentRuleCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTCPContentRuleBadRequestCode is the HTTP code returned for type CreateTCPContentRuleBadRequest
const CreateTCPContentRuleBadRequestCode int = 400

/*CreateTCPContentRuleBadRequest Bad request

swagger:response createTcpContentRuleBadRequest
*/
type CreateTCPContentRuleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateTCPContentRuleBadRequest creates CreateTCPContentRuleBadRequest with default headers values
func NewCreateTCPContentRuleBadRequest() *CreateTCPContentRuleBadRequest {

	return &CreateTCPContentRuleBadRequest{}
}

// WithPayload adds the payload to the create Tcp content rule bad request response
func (o *CreateTCPContentRuleBadRequest) WithPayload(payload *models.Error) *CreateTCPContentRuleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Tcp content rule bad request response
func (o *CreateTCPContentRuleBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTCPContentRuleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTCPContentRuleConflictCode is the HTTP code returned for type CreateTCPContentRuleConflict
const CreateTCPContentRuleConflictCode int = 409

/*CreateTCPContentRuleConflict The specified resource already exists

swagger:response createTcpContentRuleConflict
*/
type CreateTCPContentRuleConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateTCPContentRuleConflict creates CreateTCPContentRuleConflict with default headers values
func NewCreateTCPContentRuleConflict() *CreateTCPContentRuleConflict {

	return &CreateTCPContentRuleConflict{}
}

// WithPayload adds the payload to the create Tcp content rule conflict response
func (o *CreateTCPContentRuleConflict) WithPayload(payload *models.Error) *CreateTCPContentRuleConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Tcp content rule conflict response
func (o *CreateTCPContentRuleConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTCPContentRuleConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateTCPContentRuleDefault General Error

swagger:response createTcpContentRuleDefault
*/
type CreateTCPContentRuleDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateTCPContentRuleDefault creates CreateTCPContentRuleDefault with default headers values
func NewCreateTCPContentRuleDefault(code int) *CreateTCPContentRuleDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateTCPContentRuleDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create TCP content rule default response
func (o *CreateTCPContentRuleDefault) WithStatusCode(code int) *CreateTCPContentRuleDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create TCP content rule default response
func (o *CreateTCPContentRuleDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create TCP content rule default response
func (o *CreateTCPContentRuleDefault) WithPayload(payload *models.Error) *CreateTCPContentRuleDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create TCP content rule default response
func (o *CreateTCPContentRuleDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTCPContentRuleDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
