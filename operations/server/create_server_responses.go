// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// CreateServerCreatedCode is the HTTP code returned for type CreateServerCreated
const CreateServerCreatedCode int = 201

/*CreateServerCreated Server created

swagger:response createServerCreated
*/
type CreateServerCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Server `json:"body,omitempty"`
}

// NewCreateServerCreated creates CreateServerCreated with default headers values
func NewCreateServerCreated() *CreateServerCreated {

	return &CreateServerCreated{}
}

// WithPayload adds the payload to the create server created response
func (o *CreateServerCreated) WithPayload(payload *models.Server) *CreateServerCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create server created response
func (o *CreateServerCreated) SetPayload(payload *models.Server) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServerCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateServerBadRequestCode is the HTTP code returned for type CreateServerBadRequest
const CreateServerBadRequestCode int = 400

/*CreateServerBadRequest Bad request

swagger:response createServerBadRequest
*/
type CreateServerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateServerBadRequest creates CreateServerBadRequest with default headers values
func NewCreateServerBadRequest() *CreateServerBadRequest {

	return &CreateServerBadRequest{}
}

// WithPayload adds the payload to the create server bad request response
func (o *CreateServerBadRequest) WithPayload(payload *models.Error) *CreateServerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create server bad request response
func (o *CreateServerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateServerConflictCode is the HTTP code returned for type CreateServerConflict
const CreateServerConflictCode int = 409

/*CreateServerConflict The specified resource already exists

swagger:response createServerConflict
*/
type CreateServerConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateServerConflict creates CreateServerConflict with default headers values
func NewCreateServerConflict() *CreateServerConflict {

	return &CreateServerConflict{}
}

// WithPayload adds the payload to the create server conflict response
func (o *CreateServerConflict) WithPayload(payload *models.Error) *CreateServerConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create server conflict response
func (o *CreateServerConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServerConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateServerDefault General Error

swagger:response createServerDefault
*/
type CreateServerDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateServerDefault creates CreateServerDefault with default headers values
func NewCreateServerDefault(code int) *CreateServerDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateServerDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create server default response
func (o *CreateServerDefault) WithStatusCode(code int) *CreateServerDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create server default response
func (o *CreateServerDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create server default response
func (o *CreateServerDefault) WithPayload(payload *models.Error) *CreateServerDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create server default response
func (o *CreateServerDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServerDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
