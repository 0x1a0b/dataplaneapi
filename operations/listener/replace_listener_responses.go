// Code generated by go-swagger; DO NOT EDIT.

package listener

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/models"
)

// ReplaceListenerOKCode is the HTTP code returned for type ReplaceListenerOK
const ReplaceListenerOKCode int = 200

/*ReplaceListenerOK Listener replaced

swagger:response replaceListenerOK
*/
type ReplaceListenerOK struct {

	/*
	  In: Body
	*/
	Payload *models.Listener `json:"body,omitempty"`
}

// NewReplaceListenerOK creates ReplaceListenerOK with default headers values
func NewReplaceListenerOK() *ReplaceListenerOK {

	return &ReplaceListenerOK{}
}

// WithPayload adds the payload to the replace listener o k response
func (o *ReplaceListenerOK) WithPayload(payload *models.Listener) *ReplaceListenerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace listener o k response
func (o *ReplaceListenerOK) SetPayload(payload *models.Listener) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceListenerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceListenerBadRequestCode is the HTTP code returned for type ReplaceListenerBadRequest
const ReplaceListenerBadRequestCode int = 400

/*ReplaceListenerBadRequest Bad request

swagger:response replaceListenerBadRequest
*/
type ReplaceListenerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceListenerBadRequest creates ReplaceListenerBadRequest with default headers values
func NewReplaceListenerBadRequest() *ReplaceListenerBadRequest {

	return &ReplaceListenerBadRequest{}
}

// WithPayload adds the payload to the replace listener bad request response
func (o *ReplaceListenerBadRequest) WithPayload(payload *models.Error) *ReplaceListenerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace listener bad request response
func (o *ReplaceListenerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceListenerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ReplaceListenerNotFoundCode is the HTTP code returned for type ReplaceListenerNotFound
const ReplaceListenerNotFoundCode int = 404

/*ReplaceListenerNotFound The specified resource was not found

swagger:response replaceListenerNotFound
*/
type ReplaceListenerNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceListenerNotFound creates ReplaceListenerNotFound with default headers values
func NewReplaceListenerNotFound() *ReplaceListenerNotFound {

	return &ReplaceListenerNotFound{}
}

// WithPayload adds the payload to the replace listener not found response
func (o *ReplaceListenerNotFound) WithPayload(payload *models.Error) *ReplaceListenerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace listener not found response
func (o *ReplaceListenerNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceListenerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ReplaceListenerDefault General Error

swagger:response replaceListenerDefault
*/
type ReplaceListenerDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReplaceListenerDefault creates ReplaceListenerDefault with default headers values
func NewReplaceListenerDefault(code int) *ReplaceListenerDefault {
	if code <= 0 {
		code = 500
	}

	return &ReplaceListenerDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the replace listener default response
func (o *ReplaceListenerDefault) WithStatusCode(code int) *ReplaceListenerDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the replace listener default response
func (o *ReplaceListenerDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the replace listener default response
func (o *ReplaceListenerDefault) WithPayload(payload *models.Error) *ReplaceListenerDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the replace listener default response
func (o *ReplaceListenerDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReplaceListenerDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
