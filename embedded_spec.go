// Code generated by go-swagger; DO NOT EDIT.

package dataplaneapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for editing and managing haproxy instances. Provides process information, configuration management,\nhaproxy stats and logs.\n",
    "title": "HAProxy API",
    "contact": {
      "name": "HAProxy Support",
      "url": "https://my.haproxy.com/portal/cust/login",
      "email": "support@haproxy.com"
    },
    "version": "0.1"
  },
  "host": "api.haproxy.com",
  "basePath": "/v1",
  "paths": {
    "/": {
      "get": {
        "description": "Returns a list of root endpoints.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of root endpoints",
        "operationId": "getAPIEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services": {
      "get": {
        "description": "Returns a list of API managed services endpoints.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of service endpoints",
        "operationId": "getServicesEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy": {
      "get": {
        "description": "Returns a list of HAProxy related endpoints.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of HAProxy related endpoints",
        "operationId": "getHaproxyEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration": {
      "get": {
        "description": "Returns a list of endpoints to be used for advanced configuration of HAProxy objects.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of HAProxy advanced configuration endpoints",
        "operationId": "getConfigurationEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/backend_switching_rules": {
      "get": {
        "description": "Returns all Backend Switching Rules that are configured in specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Return an array of all Backend Switching Rules",
        "operationId": "getBackendSwitchingRules",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/backend_switching_rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new Backend Switching Rule of the specified type in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Add a new Backend Switching Rule",
        "operationId": "createBackendSwitchingRule",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backend_switching_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Backend Switching Rule created",
            "schema": {
              "$ref": "#/definitions/backend_switching_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/backend_switching_rules/{id}": {
      "get": {
        "description": "Returns one Backend Switching Rule configuration by it's ID in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Return one Backend Switching Rule",
        "operationId": "getBackendSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/backend_switching_rule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a Backend Switching Rule configuration by it's ID in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Replace a Backend Switching Rule",
        "operationId": "replaceBackendSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backend_switching_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Backend Switching Rule replaced",
            "schema": {
              "$ref": "#/definitions/backend_switching_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a Backend Switching Rule configuration by it's ID from the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Delete a Backend Switching Rule",
        "operationId": "deleteBackendSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Backend Switching Rule deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/backends": {
      "get": {
        "description": "Returns an array of all configured backends.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Return an array of backends",
        "operationId": "getBackends",
        "parameters": [
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/backends"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new backend to the configuration file.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Add a backend",
        "operationId": "createBackend",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backend"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Backend created",
            "schema": {
              "$ref": "#/definitions/backend"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/backends/{name}": {
      "get": {
        "description": "Returns one backend configuration by it's name.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Return a backend",
        "operationId": "getBackend",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/backend"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a backend configuration by it's name.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Replace a backend",
        "operationId": "replaceBackend",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backend"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Backend replaced",
            "schema": {
              "$ref": "#/definitions/backend"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a frontend from the configuration by it's name.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Delete a backend",
        "operationId": "deleteBackend",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Backend deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/filters": {
      "get": {
        "description": "Returns all Filters that are configured in specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Return an array of all Filters",
        "operationId": "getFilters",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/filters"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new Filter of the specified type in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Add a new Filter",
        "operationId": "createFilter",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filter"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Filter created",
            "schema": {
              "$ref": "#/definitions/filter"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/filters/{id}": {
      "get": {
        "description": "Returns one Filter configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Return one Filter",
        "operationId": "getFilter",
        "parameters": [
          {
            "type": "integer",
            "description": "Filter ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/filter"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a Filter configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Replace a Filter",
        "operationId": "replaceFilter",
        "parameters": [
          {
            "type": "integer",
            "description": "Filter ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filter"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Filter replaced",
            "schema": {
              "$ref": "#/definitions/filter"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a Filter configuration by it's ID from the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Delete a Filter",
        "operationId": "deleteFilter",
        "parameters": [
          {
            "type": "integer",
            "description": "Filter ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Filter deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/frontends": {
      "get": {
        "description": "Returns an array of all configured frontends.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Return an array of frontends",
        "operationId": "getFrontends",
        "parameters": [
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/frontends"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new frontend to the configuration file.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Add a frontend",
        "operationId": "createFrontend",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/frontend"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Frontend created",
            "schema": {
              "$ref": "#/definitions/frontend"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/frontends/{name}": {
      "get": {
        "description": "Returns one frontend configuration by it's name.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Return a frontend",
        "operationId": "getFrontend",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/frontend"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a frontend configuration by it's name.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Replace a frontend",
        "operationId": "replaceFrontend",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/frontend"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Frontend replaced",
            "schema": {
              "$ref": "#/definitions/frontend"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a frontend from the configuration by it's name.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Delete a frontend",
        "operationId": "deleteFrontend",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Frontend deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/global": {
      "get": {
        "description": "Returns global part of configuration.",
        "tags": [
          "Global",
          "HAProxy configuration management"
        ],
        "summary": "Return a global part of configuration",
        "operationId": "getGlobal",
        "parameters": [
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/global"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replace global part of config",
        "tags": [
          "Global",
          "HAProxy configuration management"
        ],
        "summary": "Replace global",
        "operationId": "replaceGlobal",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/global"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Global replaced",
            "schema": {
              "$ref": "#/definitions/global"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/http_request_rules": {
      "get": {
        "description": "Returns all HTTP Request Rules that are configured in specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Return an array of all HTTP Request Rules",
        "operationId": "getHTTPRequestRules",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/http_request_rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new HTTP Request Rule of the specified type in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Add a new HTTP Request Rule",
        "operationId": "createHTTPRequestRule",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/http_request_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "HTTP Request Rule created",
            "schema": {
              "$ref": "#/definitions/http_request_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/http_request_rules/{id}": {
      "get": {
        "description": "Returns one HTTP Request Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Return one HTTP Request Rule",
        "operationId": "getHTTPRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/http_request_rule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a HTTP Request Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Replace a HTTP Request Rule",
        "operationId": "replaceHTTPRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/http_request_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP Request Rule replaced",
            "schema": {
              "$ref": "#/definitions/http_request_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a HTTP Request Rule configuration by it's ID from the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Delete a HTTP Request Rule",
        "operationId": "deleteHTTPRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "HTTP Request Rule deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/http_response_rules": {
      "get": {
        "description": "Returns all HTTP Response Rules that are configured in specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Return an array of all HTTP Response Rules",
        "operationId": "getHTTPResponseRules",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/http_response_rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new HTTP Response Rule of the specified type in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Add a new HTTP Response Rule",
        "operationId": "createHTTPResponseRule",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/http_response_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "HTTP Response Rule created",
            "schema": {
              "$ref": "#/definitions/http_response_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/http_response_rules/{id}": {
      "get": {
        "description": "Returns one HTTP Response Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Return one HTTP Response Rule",
        "operationId": "getHTTPResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/http_response_rule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a HTTP Response Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Replace a HTTP Response Rule",
        "operationId": "replaceHTTPResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/http_response_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP Response Rule replaced",
            "schema": {
              "$ref": "#/definitions/http_response_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a HTTP Response Rule configuration by it's ID from the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Delete a HTTP Response Rule",
        "operationId": "deleteHTTPResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "HTTP Response Rule deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/listeners": {
      "get": {
        "description": "Returns an array of all listeners that are configured in specified frontend.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Return an array of listeners",
        "operationId": "getListeners",
        "parameters": [
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/listeners"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new listener in the specified frontend in the configuration file.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Add a new listener",
        "operationId": "createListener",
        "parameters": [
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/listener"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Listener created",
            "schema": {
              "$ref": "#/definitions/listener"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/listeners/{name}": {
      "get": {
        "description": "Returns one listener configuration by it's name in the specified frontend.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Return one listener",
        "operationId": "getListener",
        "parameters": [
          {
            "type": "string",
            "description": "Listener name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/listener"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a listener configuration by it's name in the specified frontend.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Replace a listener",
        "operationId": "replaceListener",
        "parameters": [
          {
            "type": "string",
            "description": "Listener name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/listener"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Listener replaced",
            "schema": {
              "$ref": "#/definitions/listener"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a listener configuration by it's name in the specified frontend.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Delete a listener",
        "operationId": "deleteListener",
        "parameters": [
          {
            "type": "string",
            "description": "Listener name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Listener deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/raw": {
      "get": {
        "description": "Returns HAProxy configuration file in plain text",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "Configuration",
          "HAProxy configuration management"
        ],
        "summary": "Return HAProxy configuration",
        "operationId": "getHAProxyConfiguration",
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "configuration": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Push a new haproxy configuration file in plain text",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "Configuration",
          "HAProxy configuration management"
        ],
        "summary": "Push new haproxy configuration",
        "operationId": "postHAProxyConfiguration",
        "parameters": [
          {
            "name": "configuration",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "New HAProxy configuration pushed",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/server_switching_rules": {
      "get": {
        "description": "Returns all Backend Switching Rules that are configured in specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Return an array of all Server Switching Rules",
        "operationId": "getServerSwitchingRules",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/server_switching_rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new Server Switching Rule of the specified type in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Add a new Server Switching Rule",
        "operationId": "createServerSwitchingRule",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server_switching_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Server Switching Rule created",
            "schema": {
              "$ref": "#/definitions/server_switching_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/server_switching_rules/{id}": {
      "get": {
        "description": "Returns one Server Switching Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Return one Server Switching Rule",
        "operationId": "getServerSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/server_switching_rule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a Server Switching Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Replace a Server Switching Rule",
        "operationId": "replaceServerSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server_switching_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Server Switching Rule replaced",
            "schema": {
              "$ref": "#/definitions/server_switching_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a Server Switching Rule configuration by it's ID from the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Delete a Server Switching Rule",
        "operationId": "deleteServerSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Server Switching Rule deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/servers": {
      "get": {
        "description": "Returns an array of all servers that are configured in specified backend.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Return an array of servers",
        "operationId": "getServers",
        "parameters": [
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/servers"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new server in the specified backend in the configuration file.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Add a new server",
        "operationId": "createServer",
        "parameters": [
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Server created",
            "schema": {
              "$ref": "#/definitions/server"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/servers/{name}": {
      "get": {
        "description": "Returns one server configuration by it's name in the specified backend.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Return one server",
        "operationId": "getServer",
        "parameters": [
          {
            "type": "string",
            "description": "Server name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/server"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a server configuration by it's name in the specified backend.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Replace a server",
        "operationId": "replaceServer",
        "parameters": [
          {
            "type": "string",
            "description": "Server name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Server replaced",
            "schema": {
              "$ref": "#/definitions/server"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a server configuration by it's name in the specified backend.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Delete a server",
        "operationId": "deleteServer",
        "parameters": [
          {
            "type": "string",
            "description": "Server name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Server deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/stick_request_rules": {
      "get": {
        "description": "Returns all Stick Request Rules that are configured in specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Return an array of all Stick Request Rules",
        "operationId": "getStickRequestRules",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/stick_request_rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new Stick Request Rule of the specified type in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Add a new Stick Request Rule",
        "operationId": "createStickRequestRule",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stick_request_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Stick Request Rule created",
            "schema": {
              "$ref": "#/definitions/stick_request_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/stick_request_rules/{id}": {
      "get": {
        "description": "Returns one Stick Request Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Return one Stick Request Rule",
        "operationId": "getStickRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/stick_request_rule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a Stick Request Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Replace a Stick Request Rule",
        "operationId": "replaceStickRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stick_request_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Stick Request Rule replaced",
            "schema": {
              "$ref": "#/definitions/stick_request_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a Stick Request Rule configuration by it's ID from the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Delete a Stick Request Rule",
        "operationId": "deleteStickRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Stick Request Rule deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/stick_response_rules": {
      "get": {
        "description": "Returns all Stick Response Rules that are configured in specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Return an array of all Stick Response Rules",
        "operationId": "getStickResponseRules",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/stick_response_rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new Stick Response Rule of the specified type in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Add a new Stick Response Rule",
        "operationId": "createStickResponseRule",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stick_response_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Stick Response Rule created",
            "schema": {
              "$ref": "#/definitions/stick_response_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/stick_response_rules/{id}": {
      "get": {
        "description": "Returns one Stick Response Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Return one Stick Response Rule",
        "operationId": "getStickResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/stick_response_rule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a Stick Response Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Replace a Stick Response Rule",
        "operationId": "replaceStickResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stick_response_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Stick Response Rule replaced",
            "schema": {
              "$ref": "#/definitions/stick_response_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a Stick Response Rule configuration by it's ID from the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Delete a Stick Response Rule",
        "operationId": "deleteStickResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Stick Response Rule deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/tcp_connection_rules": {
      "get": {
        "description": "Returns all TCP Connection Rules that are configured in specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Return an array of all TCP Connection Rules",
        "operationId": "getTCPConnectionRules",
        "parameters": [
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/tcp_rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new TCP Connection Rule of the specified type in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Add a new TCP Connection Rule",
        "operationId": "createTCPConnectionRule",
        "parameters": [
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "TCP Connection Rule created",
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/tcp_connection_rules/{id}": {
      "get": {
        "description": "Returns one TCP Connection Rule configuration by it's ID in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Return one TCP Connection Rule",
        "operationId": "getTCPConnectionRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Connection Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/tcp_rule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a TCP Connection Rule configuration by it's ID in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Replace a TCP Connection Rule",
        "operationId": "replaceTCPConnectionRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Connection Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "TCP Connection Rule replaced",
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a TCP Connection Rule configuration by it's ID from the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Delete a TCP Connection Rule",
        "operationId": "deleteTCPConnectionRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Connection Rule IF",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "TCP Connection Rule deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/tcp_content_rules": {
      "get": {
        "description": "Returns all TCP Content Rules that are configured in specified parent and parent type. TCP Content Rules can be request rules or response rules if parent is backend, and only request if parent is frontend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Return an array of all TCP Content Rules",
        "operationId": "getTCPContentRules",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/tcp_rules"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new TCP Content Rule of the specified type in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Add a new TCP Content Rule",
        "operationId": "createTCPContentRule",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "TCP Content Rule created",
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/configuration/tcp_content_rules/{id}": {
      "get": {
        "description": "Returns one TCP Content Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Return one TCP Content Rule",
        "operationId": "getTCPContentRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Content Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/tcp_rule"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a TCP Content Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Replace a TCP Content Rule",
        "operationId": "replaceTCPContentRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Content Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "TCP Content Rule replaced",
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a TCP Content Rule configuration by it's ID from the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Delete a TCP Content Rule",
        "operationId": "deleteTCPContentRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Content Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "TCP Content Rule deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/info": {
      "get": {
        "description": "Return HAProxy process information",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Information"
        ],
        "summary": "Return HAProxy process information",
        "operationId": "getHaproxyProcessInfo",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/process_info"
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/sites": {
      "get": {
        "description": "Returns an array of all configured sites.",
        "tags": [
          "Sites"
        ],
        "summary": "Return an array of sites",
        "operationId": "getSites",
        "parameters": [
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/sites"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Adds a new site to the configuration file.",
        "tags": [
          "Sites"
        ],
        "summary": "Add a site",
        "operationId": "createSite",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/site"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "201": {
            "description": "Site created",
            "schema": {
              "$ref": "#/definitions/site"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "409": {
            "$ref": "#/responses/AlreadyExists"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/sites/{name}": {
      "get": {
        "description": "Returns one site configuration by it's name.",
        "tags": [
          "Sites"
        ],
        "summary": "Return a site",
        "operationId": "getSite",
        "parameters": [
          {
            "type": "string",
            "description": "Site frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "_version": {
                  "type": "integer"
                },
                "data": {
                  "$ref": "#/definitions/site"
                }
              }
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Replaces a site configuration by it's name.",
        "tags": [
          "Sites"
        ],
        "summary": "Replace a site",
        "operationId": "replaceSite",
        "parameters": [
          {
            "type": "string",
            "description": "Site frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/site"
            }
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "200": {
            "description": "Site replaced",
            "schema": {
              "$ref": "#/definitions/site"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a site from the configuration by it's name.",
        "tags": [
          "Sites"
        ],
        "summary": "Delete a site",
        "operationId": "deleteSite",
        "parameters": [
          {
            "type": "string",
            "description": "Site frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/parameters/transaction_id"
          },
          {
            "$ref": "#/parameters/version"
          }
        ],
        "responses": {
          "204": {
            "description": "Site deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/stats": {
      "get": {
        "description": "Returns a list of HAProxy stats endpoints.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of HAProxy stats endpoints",
        "operationId": "getStatsEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/stats/native": {
      "get": {
        "description": "Getting stats from the HAProxy.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Stats"
        ],
        "summary": "Gets stats",
        "operationId": "getStats",
        "parameters": [
          {
            "enum": [
              "frontend",
              "backend",
              "server"
            ],
            "type": "string",
            "description": "Object type to get stats for (one of frontend, backend, server)",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Object name to get stats for",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "x-dependency": {
              "query.type": "server"
            },
            "description": "Object parent name to get stats for, in case the object is a server",
            "name": "parent",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Comma-separated list of fields to return",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/native_stats"
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/transactions": {
      "get": {
        "description": "Returns a list of HAProxy configuration transactions. Transactions can be filtered by their status.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Return list of HAProxy configuration transactions.",
        "operationId": "getTransactions",
        "parameters": [
          {
            "enum": [
              "failed",
              "in_progress"
            ],
            "type": "string",
            "description": "Filter by transaction status",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/transactions"
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "post": {
        "description": "Starts a new transaction and returns it's id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Start a new transaction",
        "operationId": "startTransaction",
        "parameters": [
          {
            "type": "integer",
            "description": "Configuration version on which to work on",
            "name": "version",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Transaction started",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    },
    "/services/haproxy/transactions/{id}": {
      "get": {
        "description": "Returns one HAProxy configuration transactions.",
        "tags": [
          "Transactions"
        ],
        "summary": "Return one HAProxy configuration transactions",
        "operationId": "getTransaction",
        "parameters": [
          {
            "type": "string",
            "description": "Transaction id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "put": {
        "description": "Commit transaction, execute all operations in transaction and return msg",
        "tags": [
          "Transactions"
        ],
        "summary": "Commit transaction",
        "operationId": "commitTransaction",
        "parameters": [
          {
            "type": "string",
            "description": "Transaction id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction succesfully commited",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      },
      "delete": {
        "description": "Deletes a transaction.",
        "tags": [
          "Transactions"
        ],
        "summary": "Delete a transaction",
        "operationId": "deleteTransaction",
        "parameters": [
          {
            "type": "string",
            "description": "Transaction id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction deleted"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "default": {
            "$ref": "#/responses/DefaultError"
          }
        }
      }
    }
  },
  "definitions": {
    "backend": {
      "description": "HAProxy backend configuration",
      "type": "object",
      "title": "Backend",
      "required": [
        "name"
      ],
      "properties": {
        "adv_check": {
          "type": "string",
          "enum": [
            "http",
            "ssl-hello",
            "smtp",
            "ldap",
            "mysql",
            "pgsql",
            "tcp",
            "redis"
          ]
        },
        "adv_check_http_method": {
          "type": "string",
          "enum": [
            "HEAD",
            "PUT",
            "POST",
            "GET",
            "TRACE",
            "PATCH"
          ],
          "x-dependency": {
            "adv_check": "http"
          }
        },
        "adv_check_http_uri": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "adv_check": "http"
          }
        },
        "adv_check_http_version": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "adv_check": "http"
          }
        },
        "balance": {
          "type": "string",
          "enum": [
            "roundrobin",
            "least-connections",
            "hash-uri",
            "hash-source"
          ]
        },
        "check_fall": {
          "type": "integer",
          "x-nullable": true
        },
        "check_interval": {
          "type": "integer",
          "x-nullable": true
        },
        "check_port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0,
          "x-nullable": true
        },
        "check_rise": {
          "type": "integer",
          "x-nullable": true
        },
        "check_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "connect_failure_redispatch": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "connect_retries": {
          "type": "integer",
          "x-nullable": true
        },
        "connect_source": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "connect_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "connect_transparent": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "continuous_statistics": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "http_connection_mode": {
          "type": "string",
          "enum": [
            "tunnel",
            "passive-close",
            "forced-close",
            "server-close",
            "keep-alive"
          ]
        },
        "http_cookie": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "http_cookie_mode": {
          "type": "string",
          "enum": [
            "passive",
            "passive-silent",
            "reset",
            "set",
            "set-silent",
            "session-prefix",
            "insert-only",
            "insert-only-silent",
            "passive-session-prefix"
          ],
          "x-dependency": {
            "http_cookie": "enabled"
          }
        },
        "http_cookie_name": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "http_cookie": "enabled"
          }
        },
        "http_cookie_nocache": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-dependency": {
            "http_cookie": "enabled"
          }
        },
        "http_xff_header_insert": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "log": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "log_format": {
          "type": "string",
          "enum": [
            "tcp",
            "http",
            "clf"
          ]
        },
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-nullable": false
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "tcp"
          ]
        },
        "queued_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "server_inactivity_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "stick_table": {
          "type": "string",
          "enum": [
            "ip",
            "ipv6",
            "integer",
            "string",
            "binary"
          ]
        },
        "stick_table_expire": {
          "type": "integer",
          "x-dependency": "stick_table",
          "x-nullable": true
        },
        "stick_table_keylen": {
          "type": "integer",
          "x-dependency": "stick_table",
          "x-nullable": true
        },
        "stick_table_nopurge": {
          "type": "string",
          "enum": [
            "enabled"
          ],
          "x-dependency": "stick_table"
        },
        "stick_table_peers": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": "stick_table"
        },
        "stick_table_size": {
          "type": "integer",
          "x-dependency": "stick_table",
          "x-nullable": true
        },
        "tcpreq_inspect_delay": {
          "type": "integer",
          "x-nullable": true
        },
        "tcprsp_inspect_delay": {
          "type": "integer",
          "x-nullable": true
        }
      },
      "example": {
        "adv_check": "http",
        "balance": "roundrobin",
        "http_xff_header_insert": "enabled",
        "log_format": "http",
        "name": "test_backend",
        "protocol": "http"
      }
    },
    "backend_switching_rule": {
      "description": "HAProxy backend switching rule configuration (corresponds to use_backend directive)",
      "type": "object",
      "title": "Backend Switching Rule",
      "required": [
        "id",
        "target_farm"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "target_farm": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-nullable": false
        }
      },
      "example": {
        "cond": "if",
        "cond_test": "{ req_ssl_sni -i www.example.com }",
        "id": 0,
        "target_farm": "test_backend"
      }
    },
    "backend_switching_rules": {
      "description": "HAProxy backend switching rules array (corresponds to use_backend directives)",
      "type": "array",
      "title": "Backend Switching Rules Array",
      "items": {
        "$ref": "#/definitions/backend_switching_rule"
      }
    },
    "backends": {
      "description": "HAProxy backends array",
      "type": "array",
      "title": "Backends",
      "items": {
        "$ref": "#/definitions/backend"
      }
    },
    "endpoint": {
      "description": "Endpoint definition",
      "type": "object",
      "title": "Endpoint",
      "properties": {
        "description": {
          "description": "Endpoint description",
          "type": "string"
        },
        "title": {
          "description": "Endpoint title",
          "type": "string"
        },
        "url": {
          "description": "Path to the endpoint",
          "type": "string"
        }
      },
      "example": {
        "description": "Collection of all backends",
        "title": "Backends",
        "url": "/haproxy/backends"
      }
    },
    "endpoints": {
      "description": "Collection of endpoints",
      "type": "array",
      "title": "Endpoints Array",
      "items": {
        "$ref": "#/definitions/endpoint"
      }
    },
    "error": {
      "description": "API Error",
      "type": "object",
      "title": "Error",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "x-nullable": true
        },
        "message": {
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    "filter": {
      "description": "HAProxy filters",
      "type": "object",
      "title": "Filter",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "spoe_config": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "spoe_engine": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "trace_hexdump": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "trace_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "trace_rnd_forwarding": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "trace_rnd_parsing": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "trace",
            "compression",
            "spoe"
          ],
          "x-nullable": false
        }
      },
      "example": {
        "id": 0,
        "trace_name": "name",
        "trace_rnd_parsing": "enabled",
        "type": "trace"
      }
    },
    "filters": {
      "description": "HAProxy filters",
      "type": "array",
      "title": "Filters Array",
      "items": {
        "$ref": "#/definitions/filter"
      }
    },
    "frontend": {
      "description": "HAProxy frontend configuration",
      "type": "object",
      "title": "Frontend",
      "required": [
        "name"
      ],
      "properties": {
        "client_inactivity_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "continuous_statistics": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "default_farm": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-dynamic-enum": "getBackends",
          "x-dynamic-propery": "name"
        },
        "http_connection_mode": {
          "type": "string",
          "enum": [
            "tunnel",
            "passive-close",
            "forced-close",
            "server-close",
            "keep-alive"
          ]
        },
        "http_keepalive_timeout": {
          "type": "integer",
          "x-dependency": {
            "protocol": "http"
          },
          "x-nullable": true
        },
        "http_pretend_keepalive": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "http_request_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "log": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "log_format": {
          "type": "string",
          "enum": [
            "tcp",
            "http",
            "clf"
          ]
        },
        "log_ignore_null": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "max_connections": {
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-nullable": false
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "tcp"
          ]
        },
        "tcpreq_inspect_delay": {
          "type": "integer",
          "x-nullable": true
        }
      },
      "example": {
        "default_farm": "test_backend",
        "http_connection_mode": "keep-alive",
        "max_connections": 2000,
        "name": "test_frontend",
        "protocol": "http"
      }
    },
    "frontends": {
      "description": "HAProxy frontends array",
      "type": "array",
      "title": "Frontends",
      "items": {
        "$ref": "#/definitions/frontend"
      }
    },
    "global": {
      "description": "HAProxy global configuration",
      "type": "object",
      "title": "Global",
      "properties": {
        "daemon": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "maxconn": {
          "type": "integer"
        },
        "nbproc": {
          "type": "integer"
        },
        "runtime_api": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "runtime_api_level": {
          "type": "string",
          "enum": [
            "user",
            "operator",
            "admin"
          ]
        },
        "runtime_api_mode": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "ssl_default_bind_ciphers": {
          "type": "string"
        },
        "ssl_default_bind_options": {
          "type": "string"
        },
        "tune_ssl_default_dh_param": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "http_request_rule": {
      "description": "HAProxy HTTP request rule configuration (corresponds to http-request directives)",
      "type": "object",
      "title": "HTTP Request Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "auth_realm": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "hdr_format": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_match": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_value": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "log_level": {
          "type": "string",
          "enum": [
            "emerg",
            "alert",
            "crit",
            "err",
            "warning",
            "notice",
            "info",
            "debug",
            "silent"
          ]
        },
        "redir_code": {
          "type": "integer",
          "enum": [
            301,
            302,
            303
          ]
        },
        "redir_to": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "redir_type": {
          "type": "string",
          "enum": [
            "location",
            "prefix",
            "scheme"
          ]
        },
        "spoe_engine": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "spoe_group": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "svc_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "type": {
          "type": "string",
          "enum": [
            "allow",
            "deny",
            "auth",
            "redirect",
            "tarpit",
            "add-header",
            "set-header",
            "set-log-level",
            "set-var",
            "send-spoe-group",
            "replace-header",
            "replace-value",
            "use-service"
          ],
          "x-nullable": false
        },
        "var_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "var_pattern": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        }
      },
      "example": {
        "cond": "unless",
        "cond_test": "{ src 192.168.0.0/16 }",
        "hdr_name": "X-Haproxy-Current-Date",
        "hdr_value": "%T",
        "id": 0,
        "type": "add-header"
      }
    },
    "http_request_rules": {
      "description": "HAProxy HTTP request rules array (corresponds to http-request directives)",
      "type": "array",
      "title": "HTTP Request Rules Array",
      "items": {
        "$ref": "#/definitions/http_request_rule"
      }
    },
    "http_response_rule": {
      "description": "HAProxy HTTP response rule configuration (corresponds to http-response directives)",
      "type": "object",
      "title": "HTTP Response Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "hdr_format": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_match": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_value": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "log_level": {
          "type": "string",
          "enum": [
            "emerg",
            "alert",
            "crit",
            "err",
            "warning",
            "notice",
            "info",
            "debug",
            "silent"
          ]
        },
        "spoe_engine": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "spoe_group": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "status_group": {
          "type": "integer",
          "x-nullable": false
        },
        "type": {
          "type": "string",
          "enum": [
            "allow",
            "deny",
            "add-header",
            "set-header",
            "set-log-level",
            "set-var",
            "set-status",
            "send-spoe-group",
            "replace-header",
            "replace-value"
          ],
          "x-nullable": false
        },
        "var_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "var_pattern": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        }
      },
      "example": {
        "cond": "unless",
        "cond_test": "{ src 192.168.0.0/16 }",
        "hdr_name": "X-Haproxy-Current-Date",
        "hdr_value": "%T",
        "id": 0,
        "type": "add-header"
      }
    },
    "http_response_rules": {
      "description": "HAProxy HTTP response rules array (corresponds to http-response directives)",
      "type": "array",
      "title": "HTTP Response Rules Array",
      "items": {
        "$ref": "#/definitions/http_response_rule"
      }
    },
    "listener": {
      "description": "HAProxy frontend listener configuration (corresponds to bind directives)",
      "type": "object",
      "title": "Listener",
      "required": [
        "name"
      ],
      "properties": {
        "address": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "name": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0,
          "x-nullable": true
        },
        "process": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "ssl": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "ssl_cafile": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "ssl": "enabled"
          }
        },
        "ssl_certificate": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "ssl": "enabled"
          }
        },
        "tcp_user_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "transparent": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        }
      },
      "example": {
        "address": "127.0.0.1",
        "name": "http",
        "port": 80
      }
    },
    "listeners": {
      "description": "HAProxy frontend listeners array (corresponds to bind directives)",
      "type": "array",
      "title": "Listeners",
      "items": {
        "$ref": "#/definitions/listener"
      }
    },
    "native_stats": {
      "description": "HAProxy stats array",
      "type": "array",
      "title": "Stats Array",
      "items": {
        "description": "Current stats for one object.",
        "type": "object",
        "title": "Stats",
        "properties": {
          "backend_name": {
            "type": "string",
            "x-dependency": {
              "type": "server"
            }
          },
          "name": {
            "type": "string"
          },
          "process": {
            "type": "integer"
          },
          "stats": {
            "type": "object",
            "properties": {
              "act": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "addr": {
                "type": "string",
                "x-dependency": {
                  "type": "server"
                }
              },
              "agent_code": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "agent_desc": {
                "type": "string",
                "x-dependency": {
                  "type": "server"
                }
              },
              "agent_duration": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "agent_fall": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "agent_health": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "agent_rise": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "agent_status": {
                "type": "string",
                "enum": [
                  "UNK",
                  "INI",
                  "SOCKERR",
                  "L40K",
                  "L4TOUT",
                  "L4CON",
                  "L7OK",
                  "L7STS"
                ],
                "x-dependency": {
                  "type": "server"
                }
              },
              "algo": {
                "type": "string",
                "x-dependency": {
                  "type": "backend"
                }
              },
              "bck": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "bin": {
                "type": "integer",
                "x-nullable": true
              },
              "bout": {
                "type": "integer",
                "x-nullable": true
              },
              "check_code": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "check_desc": {
                "type": "string",
                "x-dependency": {
                  "type": "server"
                }
              },
              "check_duration": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "check_fall": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "check_health": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "check_rise": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "check_status": {
                "type": "string",
                "enum": [
                  "UNK",
                  "INI",
                  "SOCKERR",
                  "L40K",
                  "L4TOUT",
                  "L4CON",
                  "L6OK",
                  "L6TOUT",
                  "L6RSP",
                  "L7OK",
                  "L7OKC",
                  "L7TOUT",
                  "L7RSP",
                  "L7STS"
                ],
                "x-dependency": {
                  "type": "server"
                }
              },
              "chkdown": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "chkfail": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "cli_abrt": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "comp_byp": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "frontend",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "comp_in": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "frontend",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "comp_out": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "frontend",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "comp_rsp": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "frontend",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "conn_rate": {
                "type": "integer",
                "x-dependency": {
                  "type": "frontend"
                },
                "x-nullable": true
              },
              "conn_rate_max": {
                "type": "integer",
                "x-dependency": {
                  "type": "frontend"
                },
                "x-nullable": true
              },
              "conn_tot": {
                "type": "integer",
                "x-dependency": {
                  "type": "frontend"
                },
                "x-nullable": true
              },
              "cookie": {
                "type": "string",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                }
              },
              "ctime": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "dcon": {
                "type": "integer",
                "x-dependency": {
                  "type": "frontend"
                },
                "x-nullable": true
              },
              "downtime": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "dreq": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "frontend",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "dresp": {
                "type": "integer",
                "x-nullable": true
              },
              "dses": {
                "type": "integer",
                "x-dependency": {
                  "type": "frontend"
                },
                "x-nullable": true
              },
              "econ": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "ereq": {
                "type": "integer",
                "x-dependency": {
                  "type": "frontend"
                },
                "x-nullable": true
              },
              "eresp": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "hanafail": {
                "type": "string",
                "x-dependency": {
                  "type": "server"
                }
              },
              "hrsp_1xx": {
                "type": "integer",
                "x-nullable": true
              },
              "hrsp_2xx": {
                "type": "integer",
                "x-nullable": true
              },
              "hrsp_3xx": {
                "type": "integer",
                "x-nullable": true
              },
              "hrsp_4xx": {
                "type": "integer",
                "x-nullable": true
              },
              "hrsp_5xx": {
                "type": "integer",
                "x-nullable": true
              },
              "hrsp_other": {
                "type": "integer",
                "x-nullable": true
              },
              "iid": {
                "type": "integer",
                "x-nullable": true
              },
              "intercepted": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "frontend",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "lastchg": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "lastsess": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "lbtot": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "mode": {
                "type": "string",
                "enum": [
                  "tcp",
                  "http",
                  "health",
                  "unknown"
                ]
              },
              "pid": {
                "type": "integer",
                "x-nullable": true
              },
              "qcur": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "qlimit": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "qmax": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "qtime": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "rate": {
                "type": "integer",
                "x-nullable": true
              },
              "rate_lim": {
                "type": "integer",
                "x-dependency": {
                  "type": "frontend"
                },
                "x-nullable": true
              },
              "rate_max": {
                "type": "integer",
                "x-nullable": true
              },
              "req_rate": {
                "type": "integer",
                "x-dependency": {
                  "type": "frontend"
                },
                "x-nullable": true
              },
              "req_rate_max": {
                "type": "integer",
                "x-dependency": {
                  "type": "frontend"
                },
                "x-nullable": true
              },
              "req_tot": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "frontend",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "rtime": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "scur": {
                "type": "integer",
                "x-nullable": true
              },
              "sid": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "slim": {
                "type": "integer",
                "x-nullable": true
              },
              "smax": {
                "type": "integer",
                "x-nullable": true
              },
              "srv_abrt": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "status": {
                "type": "string",
                "enum": [
                  "UP",
                  "DOWN",
                  "NOLB",
                  "MAINT",
                  "no check"
                ]
              },
              "stot": {
                "type": "integer",
                "x-nullable": true
              },
              "throttle": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "tracked": {
                "type": "integer",
                "x-dependency": {
                  "type": "server"
                },
                "x-nullable": true
              },
              "ttime": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "weight": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "wredis": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              },
              "wretr": {
                "type": "integer",
                "x-dependency": {
                  "type": [
                    "server",
                    "backend"
                  ]
                },
                "x-nullable": true
              }
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "backend",
              "server",
              "frontend"
            ]
          }
        },
        "example": {
          "name": "frontend_test",
          "stats": {
            "bin": 4326578,
            "bout": 889901290,
            "comp_byp": 0,
            "comp_in": 0,
            "comp_out": 0,
            "comp_rsp": 0,
            "conn_rate": 12,
            "conn_rate_max": 456,
            "conn_tot": 45682,
            "dcon": 0,
            "dreq": 4,
            "dresp": 1,
            "dses": 0,
            "ereq": 54,
            "hrsp_1xx": 0,
            "hrsp_2xx": 165,
            "hrsp_3xx": 12,
            "hrsp_4xx": 50,
            "hrsp_5xx": 4,
            "hrsp_other": 0,
            "iid": 0,
            "intercepted": 346,
            "mode": "http",
            "pid": 3204,
            "rate": 64,
            "rate_lim": 20000,
            "rate_max": 4000,
            "req_rate": 49,
            "req_rate_max": 3965,
            "req_total": 1254786,
            "scur": 129,
            "slim": 2000,
            "smax": 2000,
            "status": "UP",
            "stot": 12902
          },
          "type": "frontend"
        }
      }
    },
    "process_info": {
      "description": "General HAProxy process information",
      "type": "object",
      "title": "HAProxy Information",
      "properties": {
        "haproxy": {
          "type": "object",
          "properties": {
            "address": {
              "description": "The address of the replying server",
              "type": "string"
            },
            "pid": {
              "description": "Process id of the replying worker process",
              "type": "integer",
              "x-nullable": true
            },
            "processes": {
              "description": "Number of spawned processes",
              "type": "integer",
              "x-nullable": true
            },
            "release_date": {
              "description": "HAProxy version release date",
              "type": "string",
              "format": "date"
            },
            "time": {
              "description": "Current time in milliseconds since Epoch.",
              "type": "string",
              "format": "date-time"
            },
            "uptime": {
              "description": "HAProxy uptime in s",
              "type": "integer",
              "x-nullable": true
            },
            "version": {
              "description": "HAProxy version string",
              "type": "string"
            }
          }
        }
      },
      "example": {
        "haproxy": {
          "address": "127.0.0.1",
          "pid": 1234,
          "processes": 4,
          "release_date": "2016-03-11",
          "time": "2018-07-02T12:00:00.124Z",
          "uptime": 8,
          "version": "1.7-dev1-868ab3-148"
        }
      }
    },
    "server": {
      "description": "HAProxy backend server configuration",
      "type": "object",
      "title": "Server",
      "required": [
        "name"
      ],
      "properties": {
        "address": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "check": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "http-cookie-id": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "maintenance": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "max-connections": {
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0,
          "x-nullable": true
        },
        "sorry": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "ssl": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "ssl_cafile": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "ssl": "enabled"
          }
        },
        "ssl_certificate": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "ssl": "enabled"
          }
        },
        "tls_tickets": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "weight": {
          "type": "integer",
          "x-nullable": true
        }
      },
      "example": {
        "address": "10.1.1.1",
        "check": "enabled",
        "max-connections": 500,
        "name": "www",
        "port": 8080,
        "weight": 80
      }
    },
    "server_switching_rule": {
      "description": "HAProxy server switching rule configuration (corresponds to use-server directive)",
      "type": "object",
      "title": "Server Switching Rule",
      "required": [
        "id",
        "target_server"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "target_server": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        }
      },
      "example": {
        "cond": "if",
        "cond_test": "{ req_ssl_sni -i www.example.com }",
        "id": 0,
        "target_server": "www"
      }
    },
    "server_switching_rules": {
      "description": "HAProxy backend server switching rules array (corresponds to use-server directives)",
      "type": "array",
      "title": "Server Switching Rules Array",
      "items": {
        "$ref": "#/definitions/server_switching_rule"
      }
    },
    "servers": {
      "description": "HAProxy backend servers array",
      "type": "array",
      "title": "Servers",
      "items": {
        "$ref": "#/definitions/server"
      }
    },
    "site": {
      "description": "Site configuration. Sites are considered as one frontend and all backends connected to that frontend.\nBackends are connected to frontend using use-backend and default_backend directives. Sites let you\nconfigure simple HAProxy configurations, for more advanced options use /haproxy/configuration \nendpoints.\n",
      "type": "object",
      "title": "Site",
      "required": [
        "name"
      ],
      "properties": {
        "backends": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "use_as"
            ],
            "properties": {
              "balance": {
                "type": "string",
                "enum": [
                  "roundrobin",
                  "least-connections",
                  "hash-uri",
                  "hash-source"
                ]
              },
              "cond": {
                "type": "string",
                "enum": [
                  "if",
                  "unless"
                ],
                "x-dependency": {
                  "use_as": "conditional"
                }
              },
              "cond_test": {
                "type": "string",
                "x-dependency": {
                  "use_as": "conditional"
                }
              },
              "http_xff_header_insert": {
                "type": "string",
                "enum": [
                  "enabled"
                ]
              },
              "log": {
                "type": "string",
                "enum": [
                  "enabled"
                ]
              },
              "name": {
                "type": "string",
                "pattern": "^[A-Za-z0-9-_.:]+$",
                "x-nullable": false
              },
              "protocol": {
                "type": "string",
                "enum": [
                  "http",
                  "tcp"
                ]
              },
              "servers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "address",
                    "port"
                  ],
                  "properties": {
                    "address": {
                      "type": "string",
                      "pattern": "^[^\\s]+$",
                      "x-nullable": false
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^[^\\s]+$",
                      "x-nullable": false
                    },
                    "port": {
                      "type": "integer",
                      "maximum": 65535,
                      "minimum": 0,
                      "x-nullable": true
                    },
                    "ssl": {
                      "type": "string",
                      "enum": [
                        "enabled"
                      ]
                    },
                    "weight": {
                      "type": "integer",
                      "x-nullable": true
                    }
                  }
                }
              },
              "use_as": {
                "type": "string",
                "enum": [
                  "default",
                  "conditional"
                ],
                "x-nullable": false
              }
            }
          }
        },
        "frontend": {
          "type": "object",
          "properties": {
            "http_connection_mode": {
              "type": "string",
              "enum": [
                "tunnel",
                "passive-close",
                "forced-close",
                "server-close",
                "keep-alive"
              ],
              "x-dependency": {
                "protocol": "http"
              }
            },
            "listeners": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "address",
                  "port"
                ],
                "properties": {
                  "address": {
                    "type": "string",
                    "pattern": "^[^\\s]+$",
                    "x-nullable": false
                  },
                  "name": {
                    "type": "string",
                    "pattern": "^[^\\s]+$",
                    "x-nullable": false
                  },
                  "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 0,
                    "x-nullable": true
                  },
                  "ssl": {
                    "type": "string",
                    "enum": [
                      "enabled"
                    ]
                  },
                  "ssl_certificate": {
                    "type": "string",
                    "pattern": "^[^\\s]+$",
                    "x-dependency": {
                      "ssl": "enabled"
                    }
                  }
                }
              }
            },
            "log": {
              "type": "string",
              "enum": [
                "enabled"
              ]
            },
            "max_connections": {
              "type": "integer",
              "x-nullable": true
            },
            "protocol": {
              "type": "string",
              "enum": [
                "http",
                "tcp"
              ]
            }
          }
        },
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-nullable": false
        }
      },
      "example": {
        "backends": [
          {
            "balance": "hash-uri",
            "log": "enabled",
            "name": "www_backend",
            "protocol": "http",
            "servers": [
              {
                "address": "127.0.1.1",
                "name": "www_server",
                "port": 4567,
                "weight": 30
              },
              {
                "address": "127.0.1.2",
                "name": "www_server_new",
                "port": 4567,
                "weight": 70
              }
            ],
            "use_as": "default"
          }
        ],
        "frontend": {
          "http_connection_mode": "server-close",
          "listeners": [
            {
              "address": "127.0.0.1",
              "name": "test_listener",
              "port": 80
            },
            {
              "address": "127.0.0.1",
              "name": "test_listener_2",
              "port": 8080
            }
          ],
          "log": "enabled",
          "max_connections": 2000,
          "protocol": "http"
        },
        "name": "test_site"
      }
    },
    "sites": {
      "description": "Sites array. Sites are considered as one frontend and all backends connected to that frontend.\nBackends are connected to frontend using use-backend and default_backend directives. Sites let you\nconfigure simple HAProxy configurations, for more advanced options use /haproxy/configuration \nendpoints.\n",
      "type": "array",
      "title": "Sites",
      "items": {
        "$ref": "#/definitions/site"
      }
    },
    "stick_request_rule": {
      "description": "Define a request pattern matching condition to stick a user to a server or to create an entry in a stickiness table.",
      "type": "object",
      "title": "Stick Request Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "pattern": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "table": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "type": {
          "type": "string",
          "enum": [
            "matchandstore",
            "matchonly",
            "storeonly"
          ],
          "x-nullable": false
        }
      },
      "example": {
        "id": 0,
        "pattern": "src",
        "type": "storeonly"
      }
    },
    "stick_request_rules": {
      "description": "HAProxy backend stick request rules array (corresponds to stick store-request or stick match)",
      "type": "array",
      "title": "Stick Request Rules Array",
      "items": {
        "$ref": "#/definitions/stick_request_rule"
      }
    },
    "stick_response_rule": {
      "description": "Define a response pattern matching condition to create an entry in a stickiness table.",
      "type": "object",
      "title": "Stick Response Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "pattern": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "table": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "type": {
          "type": "string",
          "enum": [
            "storeonly"
          ],
          "x-nullable": false
        }
      },
      "example": {
        "id": 0,
        "pattern": "src",
        "type": "storeonly"
      }
    },
    "stick_response_rules": {
      "description": "HAProxy backend stick response rules array (corresponds to stick store-response)",
      "type": "array",
      "title": "Stick Response Rules Array",
      "items": {
        "$ref": "#/definitions/stick_response_rule"
      }
    },
    "tcp_rule": {
      "description": "HAProxy TCP rule configuration (corresponds to tcp-request and tcp-response directive)",
      "type": "object",
      "title": "TCP Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "type": {
          "type": "string",
          "enum": [
            "accept",
            "reject"
          ],
          "x-nullable": false
        }
      },
      "example": {
        "cond": "if",
        "cond_test": "{ src 192.168.0.0/16 }",
        "id": 0,
        "type": "accept"
      }
    },
    "tcp_rules": {
      "description": "HAProxy TCP rules array (corresponds to tcp-request and tcp-response directives)",
      "type": "array",
      "title": "TCP Rules Array",
      "items": {
        "$ref": "#/definitions/tcp_rule"
      }
    },
    "transaction": {
      "description": "HAProxy configuration transaction",
      "type": "object",
      "title": "Configuration transaction",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "id": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "operations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "data": {
                "type": "object",
                "additionalProperties": true
              },
              "operation": {
                "type": "string",
                "pattern": "^[^\\s]+$"
              },
              "response": {
                "type": "string"
              }
            }
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "failed",
            "in_progress"
          ]
        }
      },
      "example": {
        "_version": 2,
        "id": "1uoJ7uXt7G",
        "operations": [
          {
            "data": {
              "balance": "roundrobin",
              "name": "test_bck",
              "protocol": "http"
            },
            "operation": "createBackend"
          },
          {
            "data": {
              "address": "192.168.1.1",
              "name": "test_srv",
              "port": 80
            },
            "operation": "createServer"
          }
        ],
        "status": "in_progress"
      }
    },
    "transactions": {
      "description": "Configuration transactions array",
      "type": "array",
      "title": "Transactions array",
      "items": {
        "$ref": "#/definitions/transaction"
      }
    }
  },
  "parameters": {
    "transaction_id": {
      "type": "string",
      "x-nullable": false,
      "description": "ID of the transaction where we want to add the operation",
      "name": "transaction_id",
      "in": "query"
    },
    "version": {
      "type": "integer",
      "x-nullable": false,
      "description": "Version used for checking configuration version",
      "name": "version",
      "in": "query"
    }
  },
  "responses": {
    "AlreadyExists": {
      "description": "The specified resource already exists",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "BadRequest": {
      "description": "Bad request",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "DefaultError": {
      "description": "General Error",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "NotFound": {
      "description": "The specified resource was not found",
      "schema": {
        "$ref": "#/definitions/error"
      }
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ],
  "tags": [
    {
      "description": "API autodiscover endpoints",
      "name": "Discovery"
    },
    {
      "name": "Information"
    },
    {
      "description": "Managing transactions. Configuration changes can be grouped in the transaction. You start the \ntransaction with trasactions POST, and call the configuration changes you need with parameter \ntransaction_id. When you want to commit the transaction, you call the transactions PUT and all changes\nin that transaction is commited. If you call a configuration change without the transaction_id, \ntransaction mechanism is implicitly called with one operation in transaction.\n",
      "name": "Transactions"
    },
    {
      "description": "Managing sites (simple configuration mode). Sites are considered as one frontend with multiple backends \nconnected to it via default_backend or use-backend directives.\n",
      "name": "Sites"
    },
    {
      "description": "Stats container",
      "name": "Stats"
    },
    {
      "description": "Managing global configuration (advanced mode)",
      "name": "Global"
    },
    {
      "description": "Managing frontend configuration (advanced mode)",
      "name": "Frontend"
    },
    {
      "description": "Managing backend configurations (advanced mode)",
      "name": "Backend"
    },
    {
      "description": "Managing frontend bind configurations (advanced mode)",
      "name": "Listener"
    },
    {
      "description": "Managing backend server configurations (advanced mode)",
      "name": "Server"
    },
    {
      "description": "Various frontend options (advanced mode)",
      "name": "Frontend options"
    },
    {
      "description": "Various backend options (advanced mode)",
      "name": "Backend options"
    },
    {
      "description": "Raw HAProxy configuration management (advanced mode)",
      "name": "Configuration"
    },
    {
      "description": "Managing advanced haproxy configuration (advanced mode)",
      "name": "HAProxy configuration management"
    },
    {
      "name": "TCPContentRule"
    },
    {
      "name": "HTTPRequestRule"
    },
    {
      "name": "HTTPResponseRule"
    },
    {
      "name": "BackendSwitchingRule"
    },
    {
      "name": "ServerSwitchingRule"
    },
    {
      "name": "TCPConnectionRule"
    },
    {
      "name": "Filter"
    },
    {
      "name": "StickRequestRule"
    },
    {
      "name": "StickResponseRule"
    }
  ],
  "externalDocs": {
    "description": "Offical HAProxy documentation",
    "url": "https://cbonte.github.io/haproxy-dconv/"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API for editing and managing haproxy instances. Provides process information, configuration management,\nhaproxy stats and logs.\n",
    "title": "HAProxy API",
    "contact": {
      "name": "HAProxy Support",
      "url": "https://my.haproxy.com/portal/cust/login",
      "email": "support@haproxy.com"
    },
    "version": "0.1"
  },
  "host": "api.haproxy.com",
  "basePath": "/v1",
  "paths": {
    "/": {
      "get": {
        "description": "Returns a list of root endpoints.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of root endpoints",
        "operationId": "getAPIEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "description": "Returns a list of API managed services endpoints.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of service endpoints",
        "operationId": "getServicesEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy": {
      "get": {
        "description": "Returns a list of HAProxy related endpoints.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of HAProxy related endpoints",
        "operationId": "getHaproxyEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration": {
      "get": {
        "description": "Returns a list of endpoints to be used for advanced configuration of HAProxy objects.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of HAProxy advanced configuration endpoints",
        "operationId": "getConfigurationEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/backend_switching_rules": {
      "get": {
        "description": "Returns all Backend Switching Rules that are configured in specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Return an array of all Backend Switching Rules",
        "operationId": "getBackendSwitchingRules",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getBackendSwitchingRulesOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new Backend Switching Rule of the specified type in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Add a new Backend Switching Rule",
        "operationId": "createBackendSwitchingRule",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backend_switching_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Backend Switching Rule created",
            "schema": {
              "$ref": "#/definitions/backend_switching_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/backend_switching_rules/{id}": {
      "get": {
        "description": "Returns one Backend Switching Rule configuration by it's ID in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Return one Backend Switching Rule",
        "operationId": "getBackendSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getBackendSwitchingRuleOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a Backend Switching Rule configuration by it's ID in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Replace a Backend Switching Rule",
        "operationId": "replaceBackendSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backend_switching_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Backend Switching Rule replaced",
            "schema": {
              "$ref": "#/definitions/backend_switching_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Backend Switching Rule configuration by it's ID from the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "BackendSwitchingRule"
        ],
        "summary": "Delete a Backend Switching Rule",
        "operationId": "deleteBackendSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Backend Switching Rule deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/backends": {
      "get": {
        "description": "Returns an array of all configured backends.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Return an array of backends",
        "operationId": "getBackends",
        "parameters": [
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getBackendsOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new backend to the configuration file.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Add a backend",
        "operationId": "createBackend",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backend"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Backend created",
            "schema": {
              "$ref": "#/definitions/backend"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/backends/{name}": {
      "get": {
        "description": "Returns one backend configuration by it's name.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Return a backend",
        "operationId": "getBackend",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getBackendOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a backend configuration by it's name.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Replace a backend",
        "operationId": "replaceBackend",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/backend"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Backend replaced",
            "schema": {
              "$ref": "#/definitions/backend"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a frontend from the configuration by it's name.",
        "tags": [
          "Backend",
          "HAProxy configuration management"
        ],
        "summary": "Delete a backend",
        "operationId": "deleteBackend",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Backend deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/filters": {
      "get": {
        "description": "Returns all Filters that are configured in specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Return an array of all Filters",
        "operationId": "getFilters",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getFiltersOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new Filter of the specified type in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Add a new Filter",
        "operationId": "createFilter",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filter"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Filter created",
            "schema": {
              "$ref": "#/definitions/filter"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/filters/{id}": {
      "get": {
        "description": "Returns one Filter configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Return one Filter",
        "operationId": "getFilter",
        "parameters": [
          {
            "type": "integer",
            "description": "Filter ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getFilterOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a Filter configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Replace a Filter",
        "operationId": "replaceFilter",
        "parameters": [
          {
            "type": "integer",
            "description": "Filter ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/filter"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Filter replaced",
            "schema": {
              "$ref": "#/definitions/filter"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Filter configuration by it's ID from the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "Filter"
        ],
        "summary": "Delete a Filter",
        "operationId": "deleteFilter",
        "parameters": [
          {
            "type": "integer",
            "description": "Filter ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Filter deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/frontends": {
      "get": {
        "description": "Returns an array of all configured frontends.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Return an array of frontends",
        "operationId": "getFrontends",
        "parameters": [
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getFrontendsOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new frontend to the configuration file.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Add a frontend",
        "operationId": "createFrontend",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/frontend"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Frontend created",
            "schema": {
              "$ref": "#/definitions/frontend"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/frontends/{name}": {
      "get": {
        "description": "Returns one frontend configuration by it's name.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Return a frontend",
        "operationId": "getFrontend",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getFrontendOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a frontend configuration by it's name.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Replace a frontend",
        "operationId": "replaceFrontend",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/frontend"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Frontend replaced",
            "schema": {
              "$ref": "#/definitions/frontend"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a frontend from the configuration by it's name.",
        "tags": [
          "Frontend",
          "HAProxy configuration management"
        ],
        "summary": "Delete a frontend",
        "operationId": "deleteFrontend",
        "parameters": [
          {
            "type": "string",
            "description": "Frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Frontend deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/global": {
      "get": {
        "description": "Returns global part of configuration.",
        "tags": [
          "Global",
          "HAProxy configuration management"
        ],
        "summary": "Return a global part of configuration",
        "operationId": "getGlobal",
        "parameters": [
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getGlobalOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replace global part of config",
        "tags": [
          "Global",
          "HAProxy configuration management"
        ],
        "summary": "Replace global",
        "operationId": "replaceGlobal",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/global"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Global replaced",
            "schema": {
              "$ref": "#/definitions/global"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/http_request_rules": {
      "get": {
        "description": "Returns all HTTP Request Rules that are configured in specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Return an array of all HTTP Request Rules",
        "operationId": "getHTTPRequestRules",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getHttpRequestRulesOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new HTTP Request Rule of the specified type in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Add a new HTTP Request Rule",
        "operationId": "createHTTPRequestRule",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/http_request_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "HTTP Request Rule created",
            "schema": {
              "$ref": "#/definitions/http_request_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/http_request_rules/{id}": {
      "get": {
        "description": "Returns one HTTP Request Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Return one HTTP Request Rule",
        "operationId": "getHTTPRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getHttpRequestRuleOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a HTTP Request Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Replace a HTTP Request Rule",
        "operationId": "replaceHTTPRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/http_request_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP Request Rule replaced",
            "schema": {
              "$ref": "#/definitions/http_request_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a HTTP Request Rule configuration by it's ID from the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPRequestRule"
        ],
        "summary": "Delete a HTTP Request Rule",
        "operationId": "deleteHTTPRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "HTTP Request Rule deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/http_response_rules": {
      "get": {
        "description": "Returns all HTTP Response Rules that are configured in specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Return an array of all HTTP Response Rules",
        "operationId": "getHTTPResponseRules",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getHttpResponseRulesOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new HTTP Response Rule of the specified type in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Add a new HTTP Response Rule",
        "operationId": "createHTTPResponseRule",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/http_response_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "HTTP Response Rule created",
            "schema": {
              "$ref": "#/definitions/http_response_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/http_response_rules/{id}": {
      "get": {
        "description": "Returns one HTTP Response Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Return one HTTP Response Rule",
        "operationId": "getHTTPResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getHttpResponseRuleOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a HTTP Response Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Replace a HTTP Response Rule",
        "operationId": "replaceHTTPResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/http_response_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "HTTP Response Rule replaced",
            "schema": {
              "$ref": "#/definitions/http_response_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a HTTP Response Rule configuration by it's ID from the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "HTTPResponseRule"
        ],
        "summary": "Delete a HTTP Response Rule",
        "operationId": "deleteHTTPResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "HTTP Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "HTTP Response Rule deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/listeners": {
      "get": {
        "description": "Returns an array of all listeners that are configured in specified frontend.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Return an array of listeners",
        "operationId": "getListeners",
        "parameters": [
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getListenersOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new listener in the specified frontend in the configuration file.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Add a new listener",
        "operationId": "createListener",
        "parameters": [
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/listener"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Listener created",
            "schema": {
              "$ref": "#/definitions/listener"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/listeners/{name}": {
      "get": {
        "description": "Returns one listener configuration by it's name in the specified frontend.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Return one listener",
        "operationId": "getListener",
        "parameters": [
          {
            "type": "string",
            "description": "Listener name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getListenerOKBody"
            }
          },
          "404": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a listener configuration by it's name in the specified frontend.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Replace a listener",
        "operationId": "replaceListener",
        "parameters": [
          {
            "type": "string",
            "description": "Listener name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/listener"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Listener replaced",
            "schema": {
              "$ref": "#/definitions/listener"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a listener configuration by it's name in the specified frontend.",
        "tags": [
          "Listener",
          "HAProxy configuration management",
          "Frontend options"
        ],
        "summary": "Delete a listener",
        "operationId": "deleteListener",
        "parameters": [
          {
            "type": "string",
            "description": "Listener name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Listener deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/raw": {
      "get": {
        "description": "Returns HAProxy configuration file in plain text",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "Configuration",
          "HAProxy configuration management"
        ],
        "summary": "Return HAProxy configuration",
        "operationId": "getHAProxyConfiguration",
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/getHAProxyConfigurationOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Push a new haproxy configuration file in plain text",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "Configuration",
          "HAProxy configuration management"
        ],
        "summary": "Push new haproxy configuration",
        "operationId": "postHAProxyConfiguration",
        "parameters": [
          {
            "name": "configuration",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "New HAProxy configuration pushed",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/server_switching_rules": {
      "get": {
        "description": "Returns all Backend Switching Rules that are configured in specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Return an array of all Server Switching Rules",
        "operationId": "getServerSwitchingRules",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getServerSwitchingRulesOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new Server Switching Rule of the specified type in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Add a new Server Switching Rule",
        "operationId": "createServerSwitchingRule",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server_switching_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Server Switching Rule created",
            "schema": {
              "$ref": "#/definitions/server_switching_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/server_switching_rules/{id}": {
      "get": {
        "description": "Returns one Server Switching Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Return one Server Switching Rule",
        "operationId": "getServerSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getServerSwitchingRuleOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a Server Switching Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Replace a Server Switching Rule",
        "operationId": "replaceServerSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server_switching_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Server Switching Rule replaced",
            "schema": {
              "$ref": "#/definitions/server_switching_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Server Switching Rule configuration by it's ID from the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "ServerSwitchingRule"
        ],
        "summary": "Delete a Server Switching Rule",
        "operationId": "deleteServerSwitchingRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Switching Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Server Switching Rule deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/servers": {
      "get": {
        "description": "Returns an array of all servers that are configured in specified backend.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Return an array of servers",
        "operationId": "getServers",
        "parameters": [
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getServersOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new server in the specified backend in the configuration file.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Add a new server",
        "operationId": "createServer",
        "parameters": [
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Server created",
            "schema": {
              "$ref": "#/definitions/server"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/servers/{name}": {
      "get": {
        "description": "Returns one server configuration by it's name in the specified backend.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Return one server",
        "operationId": "getServer",
        "parameters": [
          {
            "type": "string",
            "description": "Server name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getServerOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a server configuration by it's name in the specified backend.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Replace a server",
        "operationId": "replaceServer",
        "parameters": [
          {
            "type": "string",
            "description": "Server name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/server"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Server replaced",
            "schema": {
              "$ref": "#/definitions/server"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a server configuration by it's name in the specified backend.",
        "tags": [
          "Server",
          "HAProxy configuration management",
          "Backend options"
        ],
        "summary": "Delete a server",
        "operationId": "deleteServer",
        "parameters": [
          {
            "type": "string",
            "description": "Server name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Server deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/stick_request_rules": {
      "get": {
        "description": "Returns all Stick Request Rules that are configured in specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Return an array of all Stick Request Rules",
        "operationId": "getStickRequestRules",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getStickRequestRulesOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new Stick Request Rule of the specified type in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Add a new Stick Request Rule",
        "operationId": "createStickRequestRule",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stick_request_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Stick Request Rule created",
            "schema": {
              "$ref": "#/definitions/stick_request_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/stick_request_rules/{id}": {
      "get": {
        "description": "Returns one Stick Request Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Return one Stick Request Rule",
        "operationId": "getStickRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getStickRequestRuleOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a Stick Request Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Replace a Stick Request Rule",
        "operationId": "replaceStickRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stick_request_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Stick Request Rule replaced",
            "schema": {
              "$ref": "#/definitions/stick_request_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Stick Request Rule configuration by it's ID from the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickRequestRule"
        ],
        "summary": "Delete a Stick Request Rule",
        "operationId": "deleteStickRequestRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Request Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Stick Request Rule deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/stick_response_rules": {
      "get": {
        "description": "Returns all Stick Response Rules that are configured in specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Return an array of all Stick Response Rules",
        "operationId": "getStickResponseRules",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getStickResponseRulesOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new Stick Response Rule of the specified type in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Add a new Stick Response Rule",
        "operationId": "createStickResponseRule",
        "parameters": [
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stick_response_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Stick Response Rule created",
            "schema": {
              "$ref": "#/definitions/stick_response_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/stick_response_rules/{id}": {
      "get": {
        "description": "Returns one Stick Response Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Return one Stick Response Rule",
        "operationId": "getStickResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getStickResponseRuleOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a Stick Response Rule configuration by it's ID in the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Replace a Stick Response Rule",
        "operationId": "replaceStickResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/stick_response_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Stick Response Rule replaced",
            "schema": {
              "$ref": "#/definitions/stick_response_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a Stick Response Rule configuration by it's ID from the specified backend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "StickResponseRule"
        ],
        "summary": "Delete a Stick Response Rule",
        "operationId": "deleteStickResponseRule",
        "parameters": [
          {
            "type": "integer",
            "description": "Stick Response Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Backend name",
            "name": "backend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Stick Response Rule deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/tcp_connection_rules": {
      "get": {
        "description": "Returns all TCP Connection Rules that are configured in specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Return an array of all TCP Connection Rules",
        "operationId": "getTCPConnectionRules",
        "parameters": [
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getTcpConnectionRulesOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new TCP Connection Rule of the specified type in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Add a new TCP Connection Rule",
        "operationId": "createTCPConnectionRule",
        "parameters": [
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "TCP Connection Rule created",
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/tcp_connection_rules/{id}": {
      "get": {
        "description": "Returns one TCP Connection Rule configuration by it's ID in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Return one TCP Connection Rule",
        "operationId": "getTCPConnectionRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Connection Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getTcpConnectionRuleOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a TCP Connection Rule configuration by it's ID in the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Replace a TCP Connection Rule",
        "operationId": "replaceTCPConnectionRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Connection Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "TCP Connection Rule replaced",
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a TCP Connection Rule configuration by it's ID from the specified frontend.",
        "tags": [
          "HAProxy configuration management",
          "Frontend options",
          "TCPConnectionRule"
        ],
        "summary": "Delete a TCP Connection Rule",
        "operationId": "deleteTCPConnectionRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Connection Rule IF",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent frontend name",
            "name": "frontend",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "TCP Connection Rule deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/tcp_content_rules": {
      "get": {
        "description": "Returns all TCP Content Rules that are configured in specified parent and parent type. TCP Content Rules can be request rules or response rules if parent is backend, and only request if parent is frontend.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Return an array of all TCP Content Rules",
        "operationId": "getTCPContentRules",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getTcpContentRulesOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new TCP Content Rule of the specified type in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Add a new TCP Content Rule",
        "operationId": "createTCPContentRule",
        "parameters": [
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "TCP Content Rule created",
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/configuration/tcp_content_rules/{id}": {
      "get": {
        "description": "Returns one TCP Content Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Return one TCP Content Rule",
        "operationId": "getTCPContentRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Content Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getTcpContentRuleOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a TCP Content Rule configuration by it's ID in the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Replace a TCP Content Rule",
        "operationId": "replaceTCPContentRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Content Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "TCP Content Rule replaced",
            "schema": {
              "$ref": "#/definitions/tcp_rule"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a TCP Content Rule configuration by it's ID from the specified parent.",
        "tags": [
          "HAProxy configuration management",
          "Backend options",
          "Frontend options",
          "TCPContentRule"
        ],
        "summary": "Delete a TCP Content Rule",
        "operationId": "deleteTCPContentRule",
        "parameters": [
          {
            "type": "integer",
            "description": "TCP Content Rule ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Parent name",
            "name": "parent_name",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "frontend",
              "backend"
            ],
            "type": "string",
            "description": "Parent type",
            "name": "parent_type",
            "in": "query",
            "required": true
          },
          {
            "enum": [
              "request",
              "response"
            ],
            "type": "string",
            "description": "TCP Content Rule type",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "TCP Content Rule deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/info": {
      "get": {
        "description": "Return HAProxy process information",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Information"
        ],
        "summary": "Return HAProxy process information",
        "operationId": "getHaproxyProcessInfo",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/process_info"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/sites": {
      "get": {
        "description": "Returns an array of all configured sites.",
        "tags": [
          "Sites"
        ],
        "summary": "Return an array of sites",
        "operationId": "getSites",
        "parameters": [
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getSitesOKBody"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Adds a new site to the configuration file.",
        "tags": [
          "Sites"
        ],
        "summary": "Add a site",
        "operationId": "createSite",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/site"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Site created",
            "schema": {
              "$ref": "#/definitions/site"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "The specified resource already exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/sites/{name}": {
      "get": {
        "description": "Returns one site configuration by it's name.",
        "tags": [
          "Sites"
        ],
        "summary": "Return a site",
        "operationId": "getSite",
        "parameters": [
          {
            "type": "string",
            "description": "Site frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getSiteOKBody"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Replaces a site configuration by it's name.",
        "tags": [
          "Sites"
        ],
        "summary": "Replace a site",
        "operationId": "replaceSite",
        "parameters": [
          {
            "type": "string",
            "description": "Site frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/site"
            }
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Site replaced",
            "schema": {
              "$ref": "#/definitions/site"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a site from the configuration by it's name.",
        "tags": [
          "Sites"
        ],
        "summary": "Delete a site",
        "operationId": "deleteSite",
        "parameters": [
          {
            "type": "string",
            "description": "Site frontend name",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-nullable": false,
            "description": "ID of the transaction where we want to add the operation",
            "name": "transaction_id",
            "in": "query"
          },
          {
            "type": "integer",
            "x-nullable": false,
            "description": "Version used for checking configuration version",
            "name": "version",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "Site deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/stats": {
      "get": {
        "description": "Returns a list of HAProxy stats endpoints.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "summary": "Return list of HAProxy stats endpoints",
        "operationId": "getStatsEndpoints",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/endpoints"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/stats/native": {
      "get": {
        "description": "Getting stats from the HAProxy.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Stats"
        ],
        "summary": "Gets stats",
        "operationId": "getStats",
        "parameters": [
          {
            "enum": [
              "frontend",
              "backend",
              "server"
            ],
            "type": "string",
            "description": "Object type to get stats for (one of frontend, backend, server)",
            "name": "type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Object name to get stats for",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "x-dependency": {
              "query.type": "server"
            },
            "description": "Object parent name to get stats for, in case the object is a server",
            "name": "parent",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Comma-separated list of fields to return",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/native_stats"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/transactions": {
      "get": {
        "description": "Returns a list of HAProxy configuration transactions. Transactions can be filtered by their status.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Return list of HAProxy configuration transactions.",
        "operationId": "getTransactions",
        "parameters": [
          {
            "enum": [
              "failed",
              "in_progress"
            ],
            "type": "string",
            "description": "Filter by transaction status",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/transactions"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "description": "Starts a new transaction and returns it's id",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Transactions"
        ],
        "summary": "Start a new transaction",
        "operationId": "startTransaction",
        "parameters": [
          {
            "type": "integer",
            "description": "Configuration version on which to work on",
            "name": "version",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Transaction started",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/services/haproxy/transactions/{id}": {
      "get": {
        "description": "Returns one HAProxy configuration transactions.",
        "tags": [
          "Transactions"
        ],
        "summary": "Return one HAProxy configuration transactions",
        "operationId": "getTransaction",
        "parameters": [
          {
            "type": "string",
            "description": "Transaction id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "description": "Commit transaction, execute all operations in transaction and return msg",
        "tags": [
          "Transactions"
        ],
        "summary": "Commit transaction",
        "operationId": "commitTransaction",
        "parameters": [
          {
            "type": "string",
            "description": "Transaction id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction succesfully commited",
            "schema": {
              "$ref": "#/definitions/transaction"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a transaction.",
        "tags": [
          "Transactions"
        ],
        "summary": "Delete a transaction",
        "operationId": "deleteTransaction",
        "parameters": [
          {
            "type": "string",
            "description": "Transaction id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction deleted"
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "General Error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "backend": {
      "description": "HAProxy backend configuration",
      "type": "object",
      "title": "Backend",
      "required": [
        "name"
      ],
      "properties": {
        "adv_check": {
          "type": "string",
          "enum": [
            "http",
            "ssl-hello",
            "smtp",
            "ldap",
            "mysql",
            "pgsql",
            "tcp",
            "redis"
          ]
        },
        "adv_check_http_method": {
          "type": "string",
          "enum": [
            "HEAD",
            "PUT",
            "POST",
            "GET",
            "TRACE",
            "PATCH"
          ],
          "x-dependency": {
            "adv_check": "http"
          }
        },
        "adv_check_http_uri": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "adv_check": "http"
          }
        },
        "adv_check_http_version": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "adv_check": "http"
          }
        },
        "balance": {
          "type": "string",
          "enum": [
            "roundrobin",
            "least-connections",
            "hash-uri",
            "hash-source"
          ]
        },
        "check_fall": {
          "type": "integer",
          "x-nullable": true
        },
        "check_interval": {
          "type": "integer",
          "x-nullable": true
        },
        "check_port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0,
          "x-nullable": true
        },
        "check_rise": {
          "type": "integer",
          "x-nullable": true
        },
        "check_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "connect_failure_redispatch": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "connect_retries": {
          "type": "integer",
          "x-nullable": true
        },
        "connect_source": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "connect_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "connect_transparent": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "continuous_statistics": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "http_connection_mode": {
          "type": "string",
          "enum": [
            "tunnel",
            "passive-close",
            "forced-close",
            "server-close",
            "keep-alive"
          ]
        },
        "http_cookie": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "http_cookie_mode": {
          "type": "string",
          "enum": [
            "passive",
            "passive-silent",
            "reset",
            "set",
            "set-silent",
            "session-prefix",
            "insert-only",
            "insert-only-silent",
            "passive-session-prefix"
          ],
          "x-dependency": {
            "http_cookie": "enabled"
          }
        },
        "http_cookie_name": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "http_cookie": "enabled"
          }
        },
        "http_cookie_nocache": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ],
          "x-dependency": {
            "http_cookie": "enabled"
          }
        },
        "http_xff_header_insert": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "log": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "log_format": {
          "type": "string",
          "enum": [
            "tcp",
            "http",
            "clf"
          ]
        },
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-nullable": false
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "tcp"
          ]
        },
        "queued_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "server_inactivity_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "stick_table": {
          "type": "string",
          "enum": [
            "ip",
            "ipv6",
            "integer",
            "string",
            "binary"
          ]
        },
        "stick_table_expire": {
          "type": "integer",
          "x-dependency": "stick_table",
          "x-nullable": true
        },
        "stick_table_keylen": {
          "type": "integer",
          "x-dependency": "stick_table",
          "x-nullable": true
        },
        "stick_table_nopurge": {
          "type": "string",
          "enum": [
            "enabled"
          ],
          "x-dependency": "stick_table"
        },
        "stick_table_peers": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": "stick_table"
        },
        "stick_table_size": {
          "type": "integer",
          "x-dependency": "stick_table",
          "x-nullable": true
        },
        "tcpreq_inspect_delay": {
          "type": "integer",
          "x-nullable": true
        },
        "tcprsp_inspect_delay": {
          "type": "integer",
          "x-nullable": true
        }
      },
      "example": {
        "adv_check": "http",
        "balance": "roundrobin",
        "http_xff_header_insert": "enabled",
        "log_format": "http",
        "name": "test_backend",
        "protocol": "http"
      }
    },
    "backend_switching_rule": {
      "description": "HAProxy backend switching rule configuration (corresponds to use_backend directive)",
      "type": "object",
      "title": "Backend Switching Rule",
      "required": [
        "id",
        "target_farm"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "target_farm": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-nullable": false
        }
      },
      "example": {
        "cond": "if",
        "cond_test": "{ req_ssl_sni -i www.example.com }",
        "id": 0,
        "target_farm": "test_backend"
      }
    },
    "backend_switching_rules": {
      "description": "HAProxy backend switching rules array (corresponds to use_backend directives)",
      "type": "array",
      "title": "Backend Switching Rules Array",
      "items": {
        "$ref": "#/definitions/backend_switching_rule"
      }
    },
    "backends": {
      "description": "HAProxy backends array",
      "type": "array",
      "title": "Backends",
      "items": {
        "$ref": "#/definitions/backend"
      }
    },
    "endpoint": {
      "description": "Endpoint definition",
      "type": "object",
      "title": "Endpoint",
      "properties": {
        "description": {
          "description": "Endpoint description",
          "type": "string"
        },
        "title": {
          "description": "Endpoint title",
          "type": "string"
        },
        "url": {
          "description": "Path to the endpoint",
          "type": "string"
        }
      },
      "example": {
        "description": "Collection of all backends",
        "title": "Backends",
        "url": "/haproxy/backends"
      }
    },
    "endpoints": {
      "description": "Collection of endpoints",
      "type": "array",
      "title": "Endpoints Array",
      "items": {
        "$ref": "#/definitions/endpoint"
      }
    },
    "error": {
      "description": "API Error",
      "type": "object",
      "title": "Error",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "x-nullable": true
        },
        "message": {
          "type": "string",
          "x-nullable": true
        }
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    "filter": {
      "description": "HAProxy filters",
      "type": "object",
      "title": "Filter",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "spoe_config": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "spoe_engine": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "trace_hexdump": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "trace_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "trace_rnd_forwarding": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "trace_rnd_parsing": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "trace",
            "compression",
            "spoe"
          ],
          "x-nullable": false
        }
      },
      "example": {
        "id": 0,
        "trace_name": "name",
        "trace_rnd_parsing": "enabled",
        "type": "trace"
      }
    },
    "filters": {
      "description": "HAProxy filters",
      "type": "array",
      "title": "Filters Array",
      "items": {
        "$ref": "#/definitions/filter"
      }
    },
    "frontend": {
      "description": "HAProxy frontend configuration",
      "type": "object",
      "title": "Frontend",
      "required": [
        "name"
      ],
      "properties": {
        "client_inactivity_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "continuous_statistics": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "default_farm": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-dynamic-enum": "getBackends",
          "x-dynamic-propery": "name"
        },
        "http_connection_mode": {
          "type": "string",
          "enum": [
            "tunnel",
            "passive-close",
            "forced-close",
            "server-close",
            "keep-alive"
          ]
        },
        "http_keepalive_timeout": {
          "type": "integer",
          "x-dependency": {
            "protocol": "http"
          },
          "x-nullable": true
        },
        "http_pretend_keepalive": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "http_request_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "log": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "log_format": {
          "type": "string",
          "enum": [
            "tcp",
            "http",
            "clf"
          ]
        },
        "log_ignore_null": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "max_connections": {
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-nullable": false
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "tcp"
          ]
        },
        "tcpreq_inspect_delay": {
          "type": "integer",
          "x-nullable": true
        }
      },
      "example": {
        "default_farm": "test_backend",
        "http_connection_mode": "keep-alive",
        "max_connections": 2000,
        "name": "test_frontend",
        "protocol": "http"
      }
    },
    "frontends": {
      "description": "HAProxy frontends array",
      "type": "array",
      "title": "Frontends",
      "items": {
        "$ref": "#/definitions/frontend"
      }
    },
    "getBackendOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/backend"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getBackendSwitchingRuleOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/backend_switching_rule"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getBackendSwitchingRulesOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/backend_switching_rules"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getBackendsOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/backends"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getFilterOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/filter"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getFiltersOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/filters"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getFrontendOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/frontend"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getFrontendsOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/frontends"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getGlobalOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/global"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getHAProxyConfigurationOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "configuration": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getHttpRequestRuleOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/http_request_rule"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getHttpRequestRulesOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/http_request_rules"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getHttpResponseRuleOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/http_response_rule"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getHttpResponseRulesOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/http_response_rules"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getListenerOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/listener"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getListenersOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/listeners"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getServerOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/server"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getServerSwitchingRuleOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/server_switching_rule"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getServerSwitchingRulesOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/server_switching_rules"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getServersOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/servers"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getSiteOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/site"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getSitesOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/sites"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getStickRequestRuleOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/stick_request_rule"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getStickRequestRulesOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/stick_request_rules"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getStickResponseRuleOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/stick_response_rule"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getStickResponseRulesOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/stick_response_rules"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getTcpConnectionRuleOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/tcp_rule"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getTcpConnectionRulesOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/tcp_rules"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getTcpContentRuleOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/tcp_rule"
        }
      },
      "x-go-gen-location": "operations"
    },
    "getTcpContentRulesOKBody": {
      "type": "object",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "data": {
          "$ref": "#/definitions/tcp_rules"
        }
      },
      "x-go-gen-location": "operations"
    },
    "global": {
      "description": "HAProxy global configuration",
      "type": "object",
      "title": "Global",
      "properties": {
        "daemon": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "maxconn": {
          "type": "integer"
        },
        "nbproc": {
          "type": "integer"
        },
        "runtime_api": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "runtime_api_level": {
          "type": "string",
          "enum": [
            "user",
            "operator",
            "admin"
          ]
        },
        "runtime_api_mode": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "ssl_default_bind_ciphers": {
          "type": "string"
        },
        "ssl_default_bind_options": {
          "type": "string"
        },
        "tune_ssl_default_dh_param": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "http_request_rule": {
      "description": "HAProxy HTTP request rule configuration (corresponds to http-request directives)",
      "type": "object",
      "title": "HTTP Request Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "auth_realm": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "hdr_format": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_match": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_value": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "log_level": {
          "type": "string",
          "enum": [
            "emerg",
            "alert",
            "crit",
            "err",
            "warning",
            "notice",
            "info",
            "debug",
            "silent"
          ]
        },
        "redir_code": {
          "type": "integer",
          "enum": [
            301,
            302,
            303
          ]
        },
        "redir_to": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "redir_type": {
          "type": "string",
          "enum": [
            "location",
            "prefix",
            "scheme"
          ]
        },
        "spoe_engine": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "spoe_group": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "svc_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "type": {
          "type": "string",
          "enum": [
            "allow",
            "deny",
            "auth",
            "redirect",
            "tarpit",
            "add-header",
            "set-header",
            "set-log-level",
            "set-var",
            "send-spoe-group",
            "replace-header",
            "replace-value",
            "use-service"
          ],
          "x-nullable": false
        },
        "var_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "var_pattern": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        }
      },
      "example": {
        "cond": "unless",
        "cond_test": "{ src 192.168.0.0/16 }",
        "hdr_name": "X-Haproxy-Current-Date",
        "hdr_value": "%T",
        "id": 0,
        "type": "add-header"
      }
    },
    "http_request_rules": {
      "description": "HAProxy HTTP request rules array (corresponds to http-request directives)",
      "type": "array",
      "title": "HTTP Request Rules Array",
      "items": {
        "$ref": "#/definitions/http_request_rule"
      }
    },
    "http_response_rule": {
      "description": "HAProxy HTTP response rule configuration (corresponds to http-response directives)",
      "type": "object",
      "title": "HTTP Response Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "hdr_format": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_match": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "hdr_value": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "log_level": {
          "type": "string",
          "enum": [
            "emerg",
            "alert",
            "crit",
            "err",
            "warning",
            "notice",
            "info",
            "debug",
            "silent"
          ]
        },
        "spoe_engine": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "spoe_group": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "status_group": {
          "type": "integer",
          "x-nullable": false
        },
        "type": {
          "type": "string",
          "enum": [
            "allow",
            "deny",
            "add-header",
            "set-header",
            "set-log-level",
            "set-var",
            "set-status",
            "send-spoe-group",
            "replace-header",
            "replace-value"
          ],
          "x-nullable": false
        },
        "var_name": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "var_pattern": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        }
      },
      "example": {
        "cond": "unless",
        "cond_test": "{ src 192.168.0.0/16 }",
        "hdr_name": "X-Haproxy-Current-Date",
        "hdr_value": "%T",
        "id": 0,
        "type": "add-header"
      }
    },
    "http_response_rules": {
      "description": "HAProxy HTTP response rules array (corresponds to http-response directives)",
      "type": "array",
      "title": "HTTP Response Rules Array",
      "items": {
        "$ref": "#/definitions/http_response_rule"
      }
    },
    "listener": {
      "description": "HAProxy frontend listener configuration (corresponds to bind directives)",
      "type": "object",
      "title": "Listener",
      "required": [
        "name"
      ],
      "properties": {
        "address": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "name": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0,
          "x-nullable": true
        },
        "process": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "ssl": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "ssl_cafile": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "ssl": "enabled"
          }
        },
        "ssl_certificate": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "ssl": "enabled"
          }
        },
        "tcp_user_timeout": {
          "type": "integer",
          "x-nullable": true
        },
        "transparent": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        }
      },
      "example": {
        "address": "127.0.0.1",
        "name": "http",
        "port": 80
      }
    },
    "listeners": {
      "description": "HAProxy frontend listeners array (corresponds to bind directives)",
      "type": "array",
      "title": "Listeners",
      "items": {
        "$ref": "#/definitions/listener"
      }
    },
    "nativeStatsItems": {
      "description": "Current stats for one object.",
      "type": "object",
      "title": "Stats",
      "properties": {
        "backend_name": {
          "type": "string",
          "x-dependency": {
            "type": "server"
          }
        },
        "name": {
          "type": "string"
        },
        "process": {
          "type": "integer"
        },
        "stats": {
          "$ref": "#/definitions/nativeStatsItemsStats"
        },
        "type": {
          "type": "string",
          "enum": [
            "backend",
            "server",
            "frontend"
          ]
        }
      },
      "x-go-gen-location": "models",
      "example": {
        "name": "frontend_test",
        "stats": {
          "bin": 4326578,
          "bout": 889901290,
          "comp_byp": 0,
          "comp_in": 0,
          "comp_out": 0,
          "comp_rsp": 0,
          "conn_rate": 12,
          "conn_rate_max": 456,
          "conn_tot": 45682,
          "dcon": 0,
          "dreq": 4,
          "dresp": 1,
          "dses": 0,
          "ereq": 54,
          "hrsp_1xx": 0,
          "hrsp_2xx": 165,
          "hrsp_3xx": 12,
          "hrsp_4xx": 50,
          "hrsp_5xx": 4,
          "hrsp_other": 0,
          "iid": 0,
          "intercepted": 346,
          "mode": "http",
          "pid": 3204,
          "rate": 64,
          "rate_lim": 20000,
          "rate_max": 4000,
          "req_rate": 49,
          "req_rate_max": 3965,
          "req_total": 1254786,
          "scur": 129,
          "slim": 2000,
          "smax": 2000,
          "status": "UP",
          "stot": 12902
        },
        "type": "frontend"
      }
    },
    "nativeStatsItemsStats": {
      "type": "object",
      "properties": {
        "act": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "addr": {
          "type": "string",
          "x-dependency": {
            "type": "server"
          }
        },
        "agent_code": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "agent_desc": {
          "type": "string",
          "x-dependency": {
            "type": "server"
          }
        },
        "agent_duration": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "agent_fall": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "agent_health": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "agent_rise": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "agent_status": {
          "type": "string",
          "enum": [
            "UNK",
            "INI",
            "SOCKERR",
            "L40K",
            "L4TOUT",
            "L4CON",
            "L7OK",
            "L7STS"
          ],
          "x-dependency": {
            "type": "server"
          }
        },
        "algo": {
          "type": "string",
          "x-dependency": {
            "type": "backend"
          }
        },
        "bck": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "bin": {
          "type": "integer",
          "x-nullable": true
        },
        "bout": {
          "type": "integer",
          "x-nullable": true
        },
        "check_code": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "check_desc": {
          "type": "string",
          "x-dependency": {
            "type": "server"
          }
        },
        "check_duration": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "check_fall": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "check_health": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "check_rise": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "check_status": {
          "type": "string",
          "enum": [
            "UNK",
            "INI",
            "SOCKERR",
            "L40K",
            "L4TOUT",
            "L4CON",
            "L6OK",
            "L6TOUT",
            "L6RSP",
            "L7OK",
            "L7OKC",
            "L7TOUT",
            "L7RSP",
            "L7STS"
          ],
          "x-dependency": {
            "type": "server"
          }
        },
        "chkdown": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "chkfail": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "cli_abrt": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "comp_byp": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "frontend",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "comp_in": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "frontend",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "comp_out": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "frontend",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "comp_rsp": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "frontend",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "conn_rate": {
          "type": "integer",
          "x-dependency": {
            "type": "frontend"
          },
          "x-nullable": true
        },
        "conn_rate_max": {
          "type": "integer",
          "x-dependency": {
            "type": "frontend"
          },
          "x-nullable": true
        },
        "conn_tot": {
          "type": "integer",
          "x-dependency": {
            "type": "frontend"
          },
          "x-nullable": true
        },
        "cookie": {
          "type": "string",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          }
        },
        "ctime": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "dcon": {
          "type": "integer",
          "x-dependency": {
            "type": "frontend"
          },
          "x-nullable": true
        },
        "downtime": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "dreq": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "frontend",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "dresp": {
          "type": "integer",
          "x-nullable": true
        },
        "dses": {
          "type": "integer",
          "x-dependency": {
            "type": "frontend"
          },
          "x-nullable": true
        },
        "econ": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "ereq": {
          "type": "integer",
          "x-dependency": {
            "type": "frontend"
          },
          "x-nullable": true
        },
        "eresp": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "hanafail": {
          "type": "string",
          "x-dependency": {
            "type": "server"
          }
        },
        "hrsp_1xx": {
          "type": "integer",
          "x-nullable": true
        },
        "hrsp_2xx": {
          "type": "integer",
          "x-nullable": true
        },
        "hrsp_3xx": {
          "type": "integer",
          "x-nullable": true
        },
        "hrsp_4xx": {
          "type": "integer",
          "x-nullable": true
        },
        "hrsp_5xx": {
          "type": "integer",
          "x-nullable": true
        },
        "hrsp_other": {
          "type": "integer",
          "x-nullable": true
        },
        "iid": {
          "type": "integer",
          "x-nullable": true
        },
        "intercepted": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "frontend",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "lastchg": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "lastsess": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "lbtot": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "mode": {
          "type": "string",
          "enum": [
            "tcp",
            "http",
            "health",
            "unknown"
          ]
        },
        "pid": {
          "type": "integer",
          "x-nullable": true
        },
        "qcur": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "qlimit": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "qmax": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "qtime": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "rate": {
          "type": "integer",
          "x-nullable": true
        },
        "rate_lim": {
          "type": "integer",
          "x-dependency": {
            "type": "frontend"
          },
          "x-nullable": true
        },
        "rate_max": {
          "type": "integer",
          "x-nullable": true
        },
        "req_rate": {
          "type": "integer",
          "x-dependency": {
            "type": "frontend"
          },
          "x-nullable": true
        },
        "req_rate_max": {
          "type": "integer",
          "x-dependency": {
            "type": "frontend"
          },
          "x-nullable": true
        },
        "req_tot": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "frontend",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "rtime": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "scur": {
          "type": "integer",
          "x-nullable": true
        },
        "sid": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "slim": {
          "type": "integer",
          "x-nullable": true
        },
        "smax": {
          "type": "integer",
          "x-nullable": true
        },
        "srv_abrt": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "status": {
          "type": "string",
          "enum": [
            "UP",
            "DOWN",
            "NOLB",
            "MAINT",
            "no check"
          ]
        },
        "stot": {
          "type": "integer",
          "x-nullable": true
        },
        "throttle": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "tracked": {
          "type": "integer",
          "x-dependency": {
            "type": "server"
          },
          "x-nullable": true
        },
        "ttime": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "weight": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "wredis": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        },
        "wretr": {
          "type": "integer",
          "x-dependency": {
            "type": [
              "server",
              "backend"
            ]
          },
          "x-nullable": true
        }
      },
      "x-go-gen-location": "models"
    },
    "native_stats": {
      "description": "HAProxy stats array",
      "type": "array",
      "title": "Stats Array",
      "items": {
        "$ref": "#/definitions/nativeStatsItems"
      }
    },
    "processInfoHaproxy": {
      "type": "object",
      "properties": {
        "address": {
          "description": "The address of the replying server",
          "type": "string"
        },
        "pid": {
          "description": "Process id of the replying worker process",
          "type": "integer",
          "x-nullable": true
        },
        "processes": {
          "description": "Number of spawned processes",
          "type": "integer",
          "x-nullable": true
        },
        "release_date": {
          "description": "HAProxy version release date",
          "type": "string",
          "format": "date"
        },
        "time": {
          "description": "Current time in milliseconds since Epoch.",
          "type": "string",
          "format": "date-time"
        },
        "uptime": {
          "description": "HAProxy uptime in s",
          "type": "integer",
          "x-nullable": true
        },
        "version": {
          "description": "HAProxy version string",
          "type": "string"
        }
      },
      "x-go-gen-location": "models"
    },
    "process_info": {
      "description": "General HAProxy process information",
      "type": "object",
      "title": "HAProxy Information",
      "properties": {
        "haproxy": {
          "$ref": "#/definitions/processInfoHaproxy"
        }
      },
      "example": {
        "haproxy": {
          "address": "127.0.0.1",
          "pid": 1234,
          "processes": 4,
          "release_date": "2016-03-11",
          "time": "2018-07-02T12:00:00.124Z",
          "uptime": 8,
          "version": "1.7-dev1-868ab3-148"
        }
      }
    },
    "server": {
      "description": "HAProxy backend server configuration",
      "type": "object",
      "title": "Server",
      "required": [
        "name"
      ],
      "properties": {
        "address": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "check": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "http-cookie-id": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "maintenance": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "max-connections": {
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0,
          "x-nullable": true
        },
        "sorry": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "ssl": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "ssl_cafile": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "ssl": "enabled"
          }
        },
        "ssl_certificate": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "ssl": "enabled"
          }
        },
        "tls_tickets": {
          "type": "string",
          "enum": [
            "enabled",
            "disabled"
          ]
        },
        "weight": {
          "type": "integer",
          "x-nullable": true
        }
      },
      "example": {
        "address": "10.1.1.1",
        "check": "enabled",
        "max-connections": 500,
        "name": "www",
        "port": 8080,
        "weight": 80
      }
    },
    "server_switching_rule": {
      "description": "HAProxy server switching rule configuration (corresponds to use-server directive)",
      "type": "object",
      "title": "Server Switching Rule",
      "required": [
        "id",
        "target_server"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "target_server": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        }
      },
      "example": {
        "cond": "if",
        "cond_test": "{ req_ssl_sni -i www.example.com }",
        "id": 0,
        "target_server": "www"
      }
    },
    "server_switching_rules": {
      "description": "HAProxy backend server switching rules array (corresponds to use-server directives)",
      "type": "array",
      "title": "Server Switching Rules Array",
      "items": {
        "$ref": "#/definitions/server_switching_rule"
      }
    },
    "servers": {
      "description": "HAProxy backend servers array",
      "type": "array",
      "title": "Servers",
      "items": {
        "$ref": "#/definitions/server"
      }
    },
    "site": {
      "description": "Site configuration. Sites are considered as one frontend and all backends connected to that frontend.\nBackends are connected to frontend using use-backend and default_backend directives. Sites let you\nconfigure simple HAProxy configurations, for more advanced options use /haproxy/configuration \nendpoints.\n",
      "type": "object",
      "title": "Site",
      "required": [
        "name"
      ],
      "properties": {
        "backends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/siteBackendsItems"
          }
        },
        "frontend": {
          "$ref": "#/definitions/siteFrontend"
        },
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-nullable": false
        }
      },
      "example": {
        "backends": [
          {
            "balance": "hash-uri",
            "log": "enabled",
            "name": "www_backend",
            "protocol": "http",
            "servers": [
              {
                "address": "127.0.1.1",
                "name": "www_server",
                "port": 4567,
                "weight": 30
              },
              {
                "address": "127.0.1.2",
                "name": "www_server_new",
                "port": 4567,
                "weight": 70
              }
            ],
            "use_as": "default"
          }
        ],
        "frontend": {
          "http_connection_mode": "server-close",
          "listeners": [
            {
              "address": "127.0.0.1",
              "name": "test_listener",
              "port": 80
            },
            {
              "address": "127.0.0.1",
              "name": "test_listener_2",
              "port": 8080
            }
          ],
          "log": "enabled",
          "max_connections": 2000,
          "protocol": "http"
        },
        "name": "test_site"
      }
    },
    "siteBackendsItems": {
      "type": "object",
      "required": [
        "name",
        "use_as"
      ],
      "properties": {
        "balance": {
          "type": "string",
          "enum": [
            "roundrobin",
            "least-connections",
            "hash-uri",
            "hash-source"
          ]
        },
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ],
          "x-dependency": {
            "use_as": "conditional"
          }
        },
        "cond_test": {
          "type": "string",
          "x-dependency": {
            "use_as": "conditional"
          }
        },
        "http_xff_header_insert": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "log": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "name": {
          "type": "string",
          "pattern": "^[A-Za-z0-9-_.:]+$",
          "x-nullable": false
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "tcp"
          ]
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/siteBackendsItemsServersItems"
          }
        },
        "use_as": {
          "type": "string",
          "enum": [
            "default",
            "conditional"
          ],
          "x-nullable": false
        }
      },
      "x-go-gen-location": "models"
    },
    "siteBackendsItemsServersItems": {
      "type": "object",
      "required": [
        "name",
        "address",
        "port"
      ],
      "properties": {
        "address": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "name": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0,
          "x-nullable": true
        },
        "ssl": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "weight": {
          "type": "integer",
          "x-nullable": true
        }
      },
      "x-go-gen-location": "models"
    },
    "siteFrontend": {
      "type": "object",
      "properties": {
        "http_connection_mode": {
          "type": "string",
          "enum": [
            "tunnel",
            "passive-close",
            "forced-close",
            "server-close",
            "keep-alive"
          ],
          "x-dependency": {
            "protocol": "http"
          }
        },
        "listeners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/siteFrontendListenersItems"
          }
        },
        "log": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "max_connections": {
          "type": "integer",
          "x-nullable": true
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "tcp"
          ]
        }
      },
      "x-go-gen-location": "models"
    },
    "siteFrontendListenersItems": {
      "type": "object",
      "required": [
        "name",
        "address",
        "port"
      ],
      "properties": {
        "address": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "name": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-nullable": false
        },
        "port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 0,
          "x-nullable": true
        },
        "ssl": {
          "type": "string",
          "enum": [
            "enabled"
          ]
        },
        "ssl_certificate": {
          "type": "string",
          "pattern": "^[^\\s]+$",
          "x-dependency": {
            "ssl": "enabled"
          }
        }
      },
      "x-go-gen-location": "models"
    },
    "sites": {
      "description": "Sites array. Sites are considered as one frontend and all backends connected to that frontend.\nBackends are connected to frontend using use-backend and default_backend directives. Sites let you\nconfigure simple HAProxy configurations, for more advanced options use /haproxy/configuration \nendpoints.\n",
      "type": "array",
      "title": "Sites",
      "items": {
        "$ref": "#/definitions/site"
      }
    },
    "stick_request_rule": {
      "description": "Define a request pattern matching condition to stick a user to a server or to create an entry in a stickiness table.",
      "type": "object",
      "title": "Stick Request Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "pattern": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "table": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "type": {
          "type": "string",
          "enum": [
            "matchandstore",
            "matchonly",
            "storeonly"
          ],
          "x-nullable": false
        }
      },
      "example": {
        "id": 0,
        "pattern": "src",
        "type": "storeonly"
      }
    },
    "stick_request_rules": {
      "description": "HAProxy backend stick request rules array (corresponds to stick store-request or stick match)",
      "type": "array",
      "title": "Stick Request Rules Array",
      "items": {
        "$ref": "#/definitions/stick_request_rule"
      }
    },
    "stick_response_rule": {
      "description": "Define a response pattern matching condition to create an entry in a stickiness table.",
      "type": "object",
      "title": "Stick Response Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "pattern": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "table": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "type": {
          "type": "string",
          "enum": [
            "storeonly"
          ],
          "x-nullable": false
        }
      },
      "example": {
        "id": 0,
        "pattern": "src",
        "type": "storeonly"
      }
    },
    "stick_response_rules": {
      "description": "HAProxy backend stick response rules array (corresponds to stick store-response)",
      "type": "array",
      "title": "Stick Response Rules Array",
      "items": {
        "$ref": "#/definitions/stick_response_rule"
      }
    },
    "tcp_rule": {
      "description": "HAProxy TCP rule configuration (corresponds to tcp-request and tcp-response directive)",
      "type": "object",
      "title": "TCP Rule",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "cond": {
          "type": "string",
          "enum": [
            "if",
            "unless"
          ]
        },
        "cond_test": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "x-nullable": false
        },
        "type": {
          "type": "string",
          "enum": [
            "accept",
            "reject"
          ],
          "x-nullable": false
        }
      },
      "example": {
        "cond": "if",
        "cond_test": "{ src 192.168.0.0/16 }",
        "id": 0,
        "type": "accept"
      }
    },
    "tcp_rules": {
      "description": "HAProxy TCP rules array (corresponds to tcp-request and tcp-response directives)",
      "type": "array",
      "title": "TCP Rules Array",
      "items": {
        "$ref": "#/definitions/tcp_rule"
      }
    },
    "transaction": {
      "description": "HAProxy configuration transaction",
      "type": "object",
      "title": "Configuration transaction",
      "properties": {
        "_version": {
          "type": "integer"
        },
        "id": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/transactionOperationsItems"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "failed",
            "in_progress"
          ]
        }
      },
      "example": {
        "_version": 2,
        "id": "1uoJ7uXt7G",
        "operations": [
          {
            "data": {
              "balance": "roundrobin",
              "name": "test_bck",
              "protocol": "http"
            },
            "operation": "createBackend"
          },
          {
            "data": {
              "address": "192.168.1.1",
              "name": "test_srv",
              "port": 80
            },
            "operation": "createServer"
          }
        ],
        "status": "in_progress"
      }
    },
    "transactionOperationsItems": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": true
        },
        "operation": {
          "type": "string",
          "pattern": "^[^\\s]+$"
        },
        "response": {
          "type": "string"
        }
      },
      "x-go-gen-location": "models"
    },
    "transactions": {
      "description": "Configuration transactions array",
      "type": "array",
      "title": "Transactions array",
      "items": {
        "$ref": "#/definitions/transaction"
      }
    }
  },
  "parameters": {
    "transaction_id": {
      "type": "string",
      "x-nullable": false,
      "description": "ID of the transaction where we want to add the operation",
      "name": "transaction_id",
      "in": "query"
    },
    "version": {
      "type": "integer",
      "x-nullable": false,
      "description": "Version used for checking configuration version",
      "name": "version",
      "in": "query"
    }
  },
  "responses": {
    "AlreadyExists": {
      "description": "The specified resource already exists",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "BadRequest": {
      "description": "Bad request",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "DefaultError": {
      "description": "General Error",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "NotFound": {
      "description": "The specified resource was not found",
      "schema": {
        "$ref": "#/definitions/error"
      }
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ],
  "tags": [
    {
      "description": "API autodiscover endpoints",
      "name": "Discovery"
    },
    {
      "name": "Information"
    },
    {
      "description": "Managing transactions. Configuration changes can be grouped in the transaction. You start the \ntransaction with trasactions POST, and call the configuration changes you need with parameter \ntransaction_id. When you want to commit the transaction, you call the transactions PUT and all changes\nin that transaction is commited. If you call a configuration change without the transaction_id, \ntransaction mechanism is implicitly called with one operation in transaction.\n",
      "name": "Transactions"
    },
    {
      "description": "Managing sites (simple configuration mode). Sites are considered as one frontend with multiple backends \nconnected to it via default_backend or use-backend directives.\n",
      "name": "Sites"
    },
    {
      "description": "Stats container",
      "name": "Stats"
    },
    {
      "description": "Managing global configuration (advanced mode)",
      "name": "Global"
    },
    {
      "description": "Managing frontend configuration (advanced mode)",
      "name": "Frontend"
    },
    {
      "description": "Managing backend configurations (advanced mode)",
      "name": "Backend"
    },
    {
      "description": "Managing frontend bind configurations (advanced mode)",
      "name": "Listener"
    },
    {
      "description": "Managing backend server configurations (advanced mode)",
      "name": "Server"
    },
    {
      "description": "Various frontend options (advanced mode)",
      "name": "Frontend options"
    },
    {
      "description": "Various backend options (advanced mode)",
      "name": "Backend options"
    },
    {
      "description": "Raw HAProxy configuration management (advanced mode)",
      "name": "Configuration"
    },
    {
      "description": "Managing advanced haproxy configuration (advanced mode)",
      "name": "HAProxy configuration management"
    },
    {
      "name": "TCPContentRule"
    },
    {
      "name": "HTTPRequestRule"
    },
    {
      "name": "HTTPResponseRule"
    },
    {
      "name": "BackendSwitchingRule"
    },
    {
      "name": "ServerSwitchingRule"
    },
    {
      "name": "TCPConnectionRule"
    },
    {
      "name": "Filter"
    },
    {
      "name": "StickRequestRule"
    },
    {
      "name": "StickResponseRule"
    }
  ],
  "externalDocs": {
    "description": "Offical HAProxy documentation",
    "url": "https://cbonte.github.io/haproxy-dconv/"
  }
}`))
}
